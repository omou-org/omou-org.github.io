{"ast":null,"code":"var _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Scheduler/Scheduler.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport React, { Component } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listViewPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport * as calenderActions from '../../../actions/calenderActions';\nimport SessionActions from \"./SessionActions\";\nimport './scheduler.scss';\nimport Paper from \"@material-ui/core/Paper\";\n\nclass Scheduler extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.state = {\n      calendarWeekends: true,\n      calendarEvents: []\n    };\n  }\n\n  render() {\n    let courseKeys = Object.keys(this.props.sessions);\n    let instructorKeys = Object.keys(this.props.instructors);\n    let sessionsInViewList = courseKeys.map(courseKey => {\n      let course = this.props.sessions[courseKey];\n      let courseSessionKeys = Object.keys(course);\n      let courseSessions = courseSessionKeys.map(sessionKey => {\n        let session = this.props.sessions[courseKey][sessionKey];\n        session[\"title\"] = this.props.courses[session.course_id].title;\n        instructorKeys.map(instructorKey => {\n          let instructor = this.props.instructors[instructorKey].name;\n          session['instructor'] = this.props.instructors[instructorKey].name;\n          return instructor;\n        });\n        return session;\n      });\n      return courseSessions;\n    });\n    let sessionsInView = [];\n    sessionsInViewList.forEach(sessionsList => {\n      sessionsInView = sessionsInView.concat(sessionsList);\n    });\n    let sessionsInViewWithUrl = sessionsInView.map(el => {\n      const newSessions = Object.assign({}, el);\n      newSessions.url = \"http:/scheduler/view-session/\".concat(newSessions.course_id, \"/\").concat(newSessions.session_id);\n      return newSessions;\n    });\n    return React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(SessionActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"demo-app-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      defaultView: \"timeGridDay\",\n      header: {\n        left: 'today prev,next',\n        center: ' title, ',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listViewPlugin, resourceTimelinePlugin, bootstrapPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: sessionsInViewWithUrl,\n      displayEventTime: true,\n      timeZone: 'local',\n      themeSystem: '',\n      eventLimit: 4,\n      dateClick: this.handleDateClick,\n      schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nScheduler.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    courses: state.Course.NewCourseList,\n    sessions: state.Course.CourseSessions,\n    instructors: state.Users.InstructorList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    calenderActions: bindActionCreators(calenderActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Scheduler);","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Scheduler/Scheduler.js"],"names":["connect","bindActionCreators","React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","listViewPlugin","interactionPlugin","resourceTimelinePlugin","bootstrapPlugin","calenderActions","SessionActions","Paper","Scheduler","constructor","props","calendarComponentRef","createRef","toggleWeekends","setState","calendarWeekends","state","calendarEvents","render","courseKeys","Object","keys","sessions","instructorKeys","instructors","sessionsInViewList","map","courseKey","course","courseSessionKeys","courseSessions","sessionKey","session","courses","course_id","title","instructorKey","instructor","name","sessionsInView","forEach","sessionsList","concat","sessionsInViewWithUrl","el","newSessions","assign","url","session_id","left","center","right","handleDateClick","propTypes","mapStateToProps","Course","NewCourseList","CourseSessions","Users","InstructorList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport React, { Component } from 'react';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listViewPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction'\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\nimport bootstrapPlugin from '@fullcalendar/bootstrap'\nimport * as calenderActions from '../../../actions/calenderActions';\nimport SessionActions from \"./SessionActions\"\n\nimport './scheduler.scss'\nimport Paper from \"@material-ui/core/Paper\";\n\nclass Scheduler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            calendarWeekends: true,\n            calendarEvents: [],\n\n        };\n    }\n    calendarComponentRef = React.createRef();\n\n\n    toggleWeekends = () => {\n        this.setState({ // update a property\n            calendarWeekends: !this.state.calendarWeekends\n        })\n    };\n\n\n\n\n\n    render() {\n\n        let courseKeys = Object.keys(this.props.sessions);\n        let instructorKeys = Object.keys(this.props.instructors)\n\n        let sessionsInViewList = courseKeys.map((courseKey) => {\n            let course = this.props.sessions[courseKey];\n\n            let courseSessionKeys = Object.keys(course);\n\n            let courseSessions = courseSessionKeys.map((sessionKey) => {\n                let session = this.props.sessions[courseKey][sessionKey];\n                session[\"title\"] = this.props.courses[session.course_id].title;\n\n                instructorKeys.map((instructorKey) => {\n                    let instructor = this.props.instructors[instructorKey].name;\n                    session['instructor'] = this.props.instructors[instructorKey].name\n\n                    return instructor\n                })\n\n                return session;\n            })\n\n\n            return courseSessions;\n        })\n\n        let sessionsInView = [];\n        sessionsInViewList.forEach((sessionsList) => {\n            sessionsInView = sessionsInView.concat(sessionsList);\n        })\n\n        let sessionsInViewWithUrl = sessionsInView.map((el) => {\n            const newSessions = Object.assign({}, el);\n            newSessions.url = `http:/scheduler/view-session/${newSessions.course_id}/${newSessions.session_id}`\n            return newSessions\n        })\n\n        return (<Paper className=\"paper\">\n            <SessionActions />\n\n            <div className='demo-app-calendar'>\n                <FullCalendar\n                    defaultView=\"timeGridDay\"\n                    header={{\n                        left: 'today prev,next',\n                        center: ' title, ',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listViewPlugin, resourceTimelinePlugin, bootstrapPlugin]}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={sessionsInViewWithUrl}\n                    displayEventTime={true}\n                    timeZone={'local'}\n                    themeSystem={''}\n                    eventLimit={4}\n                    dateClick={this.handleDateClick}\n                    schedulerLicenseKey={'GPL-My-Project-Is-Open-Source'}\n                />\n\n            </div>\n\n        </Paper>)\n    }\n}\n\nScheduler.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course.NewCourseList,\n        sessions: state.Course.CourseSessions,\n        instructors: state.Users.InstructorList\n\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        calenderActions: bindActionCreators(calenderActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Scheduler);\n"]},"metadata":{},"sourceType":"module"}