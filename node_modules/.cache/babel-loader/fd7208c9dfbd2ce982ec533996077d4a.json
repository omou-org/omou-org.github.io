{"ast":null,"code":"import _objectWithoutProperties from \"/Users/danielhuang/Desktop/front-end/omou-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/danielhuang/Desktop/front-end/omou-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/danielhuang/Desktop/front-end/omou-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/RegistrationLanding.js\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\"; // Material UI Imports\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withRouter } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport BackButton from \"../../BackButton\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport SearchSelect from \"react-select\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ForwardArrow from \"@material-ui/icons/ArrowForward\";\n\nconst trimString = (string, maxLen) => {\n  if (string.length > maxLen) {\n    return \"\".concat(string.slice(0, maxLen - 3).trim(), \"...\");\n  } else {\n    return string;\n  }\n};\n\nconst RegistrationLanding = props => {\n  const _useState = useState(Object.keys(props.courses).filter(courseID => props.courses[courseID].type === \"C\")),\n        _useState2 = _slicedToArray(_useState, 2),\n        courses = _useState2[0],\n        setCourses = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        anchorEl = _useState4[0],\n        setAnchorEl = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        view = _useState6[0],\n        setView = _useState6[1];\n\n  const _useState7 = useState({\n    \"instructor\": [],\n    \"grade\": [],\n    \"subject\": []\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        filter = _useState8[0],\n        setFilter = _useState8[1];\n\n  const goToRoute = route => {\n    props.history.push(props.match.url + route);\n  };\n\n  const handleFilterClick = event => {\n    event.preventDefault();\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = event => {\n    event.preventDefault();\n    setAnchorEl(null);\n  };\n\n  const handleFilterChange = (filters, filterType) => {\n    setCourses(filters ? Object.keys(props.courses).filter(courseID => {\n      const course = props.courses[courseID];\n\n      switch (filterType) {\n        case \"instructor\":\n          return filters.map(({\n            value\n          }) => value).includes(course.instructor_id);\n\n        case \"subject\":\n          return filters.map(({\n            value\n          }) => value).includes(course.subject);\n\n        case \"grade\":\n          return filters.map(({\n            value\n          }) => value).includes(course.grade);\n\n        default:\n          return true;\n      }\n    }) : Object.keys(props.courses));\n    setFilter(_objectSpread({}, filter, {\n      [filterType]: filters ? filters : []\n    }));\n  };\n\n  const renderFilter = filterType => {\n    let options = [];\n\n    switch (filterType) {\n      case \"instructor\":\n        options = Object.values(props.instructors).map(({\n          name,\n          user_id\n        }) => ({\n          \"label\": name,\n          \"value\": Number(user_id)\n        }));\n        break;\n\n      case \"subject\":\n        options = [{\n          \"label\": \"Math\",\n          \"value\": \"Math\"\n        }, {\n          \"label\": \"Science\",\n          \"value\": \"Science\"\n        }, {\n          \"label\": \"Sat\",\n          \"value\": \"Sat\"\n        }];\n        break;\n\n      case \"grade\":\n        options = [{\n          \"label\": \"1\",\n          \"value\": 1\n        }, {\n          \"label\": \"2\",\n          \"value\": 2\n        }, {\n          \"label\": \"3\",\n          \"value\": 3\n        }, {\n          \"label\": \"4\",\n          \"value\": 4\n        }, {\n          \"label\": \"5\",\n          \"value\": 5\n        }, {\n          \"label\": \"6\",\n          \"value\": 6\n        }, {\n          \"label\": \"7\",\n          \"value\": 7\n        }, {\n          \"label\": \"8\",\n          \"value\": 8\n        }, {\n          \"label\": \"9\",\n          \"value\": 9\n        }, {\n          \"label\": \"10\",\n          \"value\": 10\n        }, {\n          \"label\": \"11\",\n          \"value\": 11\n        }, {\n          \"label\": \"12\",\n          \"value\": 12\n        }];\n        break;\n\n      default:\n        return \"\";\n    }\n\n    options.push(\"All\");\n\n    const CustomClearText = () => \"clear all\";\n\n    const ClearIndicator = indicatorProps => {\n      const _indicatorProps$child = indicatorProps.children,\n            children = _indicatorProps$child === void 0 ? React.createElement(CustomClearText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }) : _indicatorProps$child,\n            getStyles = indicatorProps.getStyles,\n            _indicatorProps$inner = indicatorProps[\"innerProps\"],\n            ref = _indicatorProps$inner.ref,\n            restInnerProps = _objectWithoutProperties(_indicatorProps$inner, [\"ref\"]);\n\n      return React.createElement(\"div\", Object.assign({}, restInnerProps, {\n        ref: ref,\n        style: getStyles(\"clearIndicator\", indicatorProps),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          \"padding\": \"0px 5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, children));\n    };\n\n    const ClearIndicatorStyles = (base, state) => _objectSpread({}, base, {\n      \"cursor\": \"pointer\",\n      \"color\": state.isFocused ? \"blue\" : \"black\"\n    });\n\n    return React.createElement(SearchSelect, {\n      value: handleFilterClick[filterType],\n      onChange: event => {\n        handleFilterChange(event, filterType);\n      },\n      className: \"filter-options\",\n      closeMenuOnSelect: false,\n      components: {\n        ClearIndicator\n      },\n      placeholder: \"All \".concat(filterType, \"s\"),\n      styles: {\n        \"clearIndicator\": ClearIndicatorStyles\n      },\n      isMulti: true,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    });\n  };\n\n  const renderCourses = () => courses.map(courseID => {\n    let course = props.courses[courseID],\n        start_date = new Date(course.schedule.start_date),\n        end_date = new Date(course.schedule.end_date),\n        start_time = course.schedule.start_time.substr(1),\n        end_time = course.schedule.end_time.substr(1),\n        days = course.schedule.days.map(day => weekday[day].substr(0, 3));\n    start_date = start_date.toDateString().substr(3);\n    end_date = end_date.toDateString().substr(3);\n    const date = \"\".concat(start_date, \" - \").concat(end_date),\n          time = \"\".concat(start_time, \" - \").concat(end_time);\n    return React.createElement(Paper, {\n      className: \"row\",\n      key: courseID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      layout: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 3,\n      onClick: event => {\n        event.preventDefault();\n        goToRoute(\"/course/\".concat(course.course_id));\n      },\n      style: {\n        \"textDecoration\": \"none\",\n        \"cursor\": \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"course-heading\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, course.title)), React.createElement(Grid, {\n      item: true,\n      md: 5,\n      onClick: event => {\n        event.preventDefault();\n        goToRoute(\"/course/\".concat(course.course_id));\n      },\n      style: {\n        \"textDecoration\": \"none\",\n        \"cursor\": \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: \"course-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 4,\n      className: \"heading-det\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Date\"), React.createElement(Grid, {\n      item: true,\n      md: 8,\n      className: \"value\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, date, \" | \", days, \" \", time)), React.createElement(Grid, {\n      container: true,\n      className: \"course-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 4,\n      className: \"heading-det\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Instructor\"), React.createElement(Grid, {\n      item: true,\n      md: 8,\n      className: \"value\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, props.instructors[course.instructor_id].name)), React.createElement(Grid, {\n      container: true,\n      className: \"course-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 4,\n      className: \"heading-det\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Tuition\"), React.createElement(Grid, {\n      item: true,\n      md: 8,\n      className: \"value\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"$\", course.tuition))), React.createElement(Grid, {\n      item: true,\n      md: 4,\n      className: \"course-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      layout: \"row\",\n      style: {\n        \"height\": \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 6,\n      className: \"course-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, course.roster.length, \" / \", course.capacity), React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Status\")), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: event => {\n        event.preventDefault();\n\n        if (course.capacity > course.roster.length) {\n          goToRoute(\"/form/course/\".concat(course.course_id));\n        } else {\n          alert(\"The course is filled!\");\n        }\n      },\n      variant: \"contained\",\n      disabled: course.capacity <= course.filled,\n      className: \"button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"+ REGISTER\"))))));\n  });\n\n  const renderTutoring = () => {\n    const coursesPerRow = 3;\n    const coursesSplit = [[]];\n    courses.forEach(course => {\n      if (coursesSplit[coursesSplit.length - 1].length === coursesPerRow) {\n        coursesSplit.push([course]);\n      } else {\n        coursesSplit[coursesSplit.length - 1].push(course);\n      }\n    });\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 8,\n      alignItems: \"center\",\n      direction: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, courses.map(courseID => {\n      const course = props.courses[courseID];\n      return React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        key: courseID,\n        onClick: () => {\n          goToRoute(\"/form/tutoring/\".concat(courseID));\n        },\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"tutoring-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        component: CardContent,\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, trimString(course.title, 20)), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        align: \"center\",\n        component: ForwardArrow,\n        style: {\n          \"display\": \"inline\",\n          \"margin\": \"auto 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }))));\n    }));\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : null;\n  const weekday = {\n    \"0\": \"Sunday\",\n    \"1\": \"Monday\",\n    \"2\": \"Tuesday\",\n    \"3\": \"Wednesday\",\n    \"4\": \"Thursday\",\n    \"5\": \"Friday\",\n    \"6\": \"Saturday\"\n  };\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: \"RegistrationLanding paper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, React.createElement(BackButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    layout: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    align: \"left\",\n    className: \"heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, \"Registration Catalog\")), React.createElement(Grid, {\n    item: true,\n    md: 5,\n    style: {\n      \"margin\": \"auto 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: view,\n    style: {\n      \"marginLeft\": \"2vw\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    label: \"Courses\",\n    onClick: () => {\n      setView(0);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"Tutoring\",\n    onClick: () => {\n      setView(1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    md: 1,\n    alignContent: \"space-between\",\n    style: {\n      \"margin\": \"auto 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, React.createElement(FilterIcon, {\n    style: {\n      \"cursor\": \"pointer\"\n    },\n    onClick: event => {\n      handleFilterClick(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"registration-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, view === 0 && renderCourses(), view === 1 && renderTutoring()))), React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: event => {\n      handleClose(event);\n    },\n    className: \"registration-filter\",\n    anchorOrigin: {\n      \"vertical\": \"bottom\",\n      \"horizontal\": \"right\"\n    },\n    transformOrigin: {\n      \"vertical\": \"top\",\n      \"horizontal\": \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, renderFilter(\"instructor\"), renderFilter(\"subject\"), renderFilter(\"grade\")));\n};\n\nRegistrationLanding.propTypes = {\n  \"stuffActions\": PropTypes.object,\n  \"RegistrationForms\": PropTypes.array\n};\nexport default withRouter(RegistrationLanding);","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/RegistrationLanding.js"],"names":["PropTypes","React","useState","Grid","Button","Paper","withRouter","Typography","BackButton","FilterIcon","Popover","SearchSelect","Tabs","Tab","Card","CardContent","ForwardArrow","trimString","string","maxLen","length","slice","trim","RegistrationLanding","props","Object","keys","courses","filter","courseID","type","setCourses","anchorEl","setAnchorEl","view","setView","setFilter","goToRoute","route","history","push","match","url","handleFilterClick","event","preventDefault","currentTarget","handleClose","handleFilterChange","filters","filterType","course","map","value","includes","instructor_id","subject","grade","renderFilter","options","values","instructors","name","user_id","Number","CustomClearText","ClearIndicator","indicatorProps","children","getStyles","ref","restInnerProps","ClearIndicatorStyles","base","state","isFocused","renderCourses","start_date","Date","schedule","end_date","start_time","substr","end_time","days","day","weekday","toDateString","date","time","course_id","title","tuition","roster","capacity","alert","filled","renderTutoring","coursesPerRow","coursesSplit","forEach","open","Boolean","id","propTypes","object","array"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, {useState} from \"react\";\n\n// Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {withRouter} from \"react-router-dom\";\nimport {Typography} from \"@material-ui/core\";\nimport BackButton from \"../../BackButton\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport SearchSelect from \"react-select\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ForwardArrow from \"@material-ui/icons/ArrowForward\";\n\nconst trimString = (string, maxLen) => {\n    if (string.length > maxLen) {\n        return `${string.slice(0, maxLen - 3).trim()}...`;\n    } else {\n        return string;\n    }\n};\n\nconst RegistrationLanding = (props) => {\n    const [courses, setCourses] = useState(\n        Object.keys(props.courses).filter(\n            (courseID) => props.courses[courseID].type === \"C\"\n        ),\n    );\n    const [anchorEl, setAnchorEl] = useState(\"\");\n    const [view, setView] = useState(0);\n    const [filter, setFilter] = useState({\n        \"instructor\": [],\n        \"grade\": [],\n        \"subject\": [],\n    });\n\n    const goToRoute = (route) => {\n        props.history.push(props.match.url + route);\n    };\n\n    const handleFilterClick = (event) => {\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (event) => {\n        event.preventDefault();\n        setAnchorEl(null);\n    };\n\n    const handleFilterChange = (filters, filterType) => {\n        setCourses(filters\n            ? Object.keys(props.courses).filter((courseID) => {\n                const course = props.courses[courseID];\n                switch (filterType) {\n                    case \"instructor\":\n                        return filters\n                            .map(({value}) => value)\n                            .includes(course.instructor_id);\n                    case \"subject\":\n                        return filters\n                            .map(({value}) => value)\n                            .includes(course.subject);\n                    case \"grade\":\n                        return filters\n                            .map(({value}) => value)\n                            .includes(course.grade);\n                    default:\n                        return true;\n                }\n            })\n            : Object.keys(props.courses));\n        setFilter({\n            ...filter,\n            [filterType]: filters ? filters : [],\n        });\n    };\n\n    const renderFilter = (filterType) => {\n        let options = [];\n        switch (filterType) {\n            case \"instructor\":\n                options = Object.values(props.instructors).map(\n                    ({name, user_id}) => ({\n                        \"label\": name,\n                        \"value\": Number(user_id),\n                    })\n                );\n                break;\n            case \"subject\":\n                options = [\n                    {\"label\": \"Math\", \"value\": \"Math\"},\n                    {\"label\": \"Science\", \"value\": \"Science\"},\n                    {\"label\": \"Sat\", \"value\": \"Sat\"},\n                ];\n                break;\n            case \"grade\":\n                options = [\n                    {\"label\": \"1\", \"value\": 1},\n                    {\"label\": \"2\", \"value\": 2},\n                    {\"label\": \"3\", \"value\": 3},\n                    {\"label\": \"4\", \"value\": 4},\n                    {\"label\": \"5\", \"value\": 5},\n                    {\"label\": \"6\", \"value\": 6},\n                    {\"label\": \"7\", \"value\": 7},\n                    {\"label\": \"8\", \"value\": 8},\n                    {\"label\": \"9\", \"value\": 9},\n                    {\"label\": \"10\", \"value\": 10},\n                    {\"label\": \"11\", \"value\": 11},\n                    {\"label\": \"12\", \"value\": 12},\n                ];\n                break;\n            default:\n                return \"\";\n        }\n        options.push(\"All\");\n        const CustomClearText = () => \"clear all\";\n        const ClearIndicator = (indicatorProps) => {\n            const {\n                children = <CustomClearText />,\n                getStyles,\n                \"innerProps\": {ref, ...restInnerProps},\n            } = indicatorProps;\n            return (\n                <div\n                    {...restInnerProps}\n                    ref={ref}\n                    style={getStyles(\"clearIndicator\", indicatorProps)}>\n                    <div style={{\"padding\": \"0px 5px\"}}>{children}</div>\n                </div>\n            );\n        };\n\n        const ClearIndicatorStyles = (base, state) => ({\n            ...base,\n            \"cursor\": \"pointer\",\n            \"color\": state.isFocused ? \"blue\" : \"black\",\n        });\n        return <SearchSelect\n            value={handleFilterClick[filterType]}\n            onChange={(event) => {\n                handleFilterChange(event, filterType);\n            }}\n            className=\"filter-options\"\n            closeMenuOnSelect={false}\n            components={{ClearIndicator}}\n            placeholder={`All ${filterType}s`}\n            styles={{\"clearIndicator\": ClearIndicatorStyles}}\n            isMulti\n            options={options}\n        />;\n    };\n\n    const renderCourses = () => courses.map((courseID) => {\n        let course = props.courses[courseID],\n            start_date = new Date(course.schedule.start_date),\n            end_date = new Date(course.schedule.end_date),\n            start_time = course.schedule.start_time.substr(1),\n            end_time = course.schedule.end_time.substr(1),\n            days = course.schedule.days.map((day) => weekday[day].substr(0, 3));\n        start_date = start_date.toDateString().substr(3);\n        end_date = end_date.toDateString().substr(3);\n        const date = `${start_date} - ${end_date}`,\n            time = `${start_time} - ${end_time}`;\n        return (\n            <Paper className=\"row\" key={courseID}>\n                <Grid container alignItems=\"center\" layout=\"row\">\n                    <Grid\n                        item\n                        md={3}\n                        onClick={(event) => {\n                            event.preventDefault();\n                            goToRoute(`/course/${course.course_id}`);\n                        }}\n                        style={{\"textDecoration\": \"none\", \"cursor\": \"pointer\"}}>\n                        <Typography className=\"course-heading\" align=\"left\">\n                            {course.title}\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        md={5}\n                        onClick={(event) => {\n                            event.preventDefault();\n                            goToRoute(`/course/${course.course_id}`);\n                        }}\n                        style={{\"textDecoration\": \"none\", \"cursor\": \"pointer\"}}>\n                        <Grid\n                            container className=\"course-detail\">\n                            <Grid\n                                item\n                                md={4}\n                                className=\"heading-det\"\n                                align=\"left\">\n                                Date\n                            </Grid>\n                            <Grid\n                                item\n                                md={8}\n                                className=\"value\"\n                                align=\"left\">\n                                {date} | {days} {time}\n                            </Grid>\n                        </Grid>\n                        <Grid container className=\"course-detail\">\n                            <Grid\n                                item\n                                md={4}\n                                className=\"heading-det\"\n                                align=\"left\">\n                                Instructor\n                            </Grid>\n                            <Grid item md={8}\n                                className=\"value\"\n                                align=\"left\">\n                                {props.instructors[course.instructor_id].name}\n                            </Grid>\n                        </Grid>\n                        <Grid container className=\"course-detail\">\n                            <Grid\n                                item\n                                md={4}\n                                className=\"heading-det\"\n                                align=\"left\">\n                                Tuition\n                            </Grid>\n                            <Grid\n                                item\n                                md={8}\n                                className=\"value\"\n                                align=\"left\">\n                                ${course.tuition}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        item\n                        md={4}\n                        className=\"course-action\">\n                        <Grid\n                            container\n                            alignItems=\"center\"\n                            layout=\"row\"\n                            style={{\"height\": \"100%\"}}>\n                            <Grid\n                                item md={6}\n                                className=\"course-status\">\n                                <span className=\"stats\">\n                                    {course.roster.length} / {course.capacity}\n                                </span>\n                                <span className=\"label\">\n                                    Status\n                                </span>\n                            </Grid>\n                            <Grid item md={6}>\n                                <Button\n                                    onClick={(event) => {\n                                        event.preventDefault();\n                                        if (course.capacity > course.roster.length) {\n                                            goToRoute(`/form/course/${course.course_id}`);\n                                        } else {\n                                            alert(\"The course is filled!\");\n                                        }\n                                    }}\n                                    variant=\"contained\"\n                                    disabled={course.capacity <= course.filled}\n                                    className=\"button primary\">+ REGISTER</Button>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n            </Paper>\n        );\n    });\n\n    const renderTutoring = () => {\n        const coursesPerRow = 3;\n        const coursesSplit = [[]];\n        courses.forEach((course) => {\n            if (coursesSplit[coursesSplit.length - 1].length === coursesPerRow) {\n                coursesSplit.push([course]);\n            } else {\n                coursesSplit[coursesSplit.length - 1].push(course);\n            }\n        });\n        return (\n            <Grid container spacing={8} alignItems=\"center\" direction=\"row\">\n                {\n                    courses.map((courseID) => {\n                        const course = props.courses[courseID];\n                        return (\n                            <Grid\n                                item\n                                xs={4}\n                                key={courseID}\n                                onClick={() => {\n                                    goToRoute(`/form/tutoring/${courseID}`);\n                                }}\n                                alignItems=\"center\">\n                                <Card className=\"tutoring-card\">\n                                    <Grid container>\n                                        <Grid\n                                            item\n                                            xs={11}\n                                            component={CardContent}\n                                            align=\"left\">\n                                            {trimString(course.title, 20)}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={1}\n                                            align=\"center\"\n                                            component={ForwardArrow}\n                                            style={{\n                                                \"display\": \"inline\",\n                                                \"margin\": \"auto 0\",\n                                            }} />\n                                    </Grid>\n                                </Card>\n                            </Grid>\n                        );\n                    })\n                }\n            </Grid>\n        );\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? \"simple-popover\" : null;\n    const weekday = {\n        \"0\": \"Sunday\",\n        \"1\": \"Monday\",\n        \"2\": \"Tuesday\",\n        \"3\": \"Wednesday\",\n        \"4\": \"Thursday\",\n        \"5\": \"Friday\",\n        \"6\": \"Saturday\",\n    };\n\n    return (\n        <Grid container>\n            <Grid item xs={12}>\n                <Paper className=\"RegistrationLanding paper\">\n                    <BackButton />\n                    <hr />\n                    <Grid container layout=\"row\">\n                        <Grid item md={6}>\n                            <Typography\n                                variant=\"h3\"\n                                align=\"left\"\n                                className=\"heading\">\n                                Registration Catalog\n                            </Typography>\n                        </Grid>\n                        <Grid item md={5} style={{\n                            \"margin\": \"auto 0\",\n                        }}>\n                            <Tabs value={view} style={{\n                                \"marginLeft\": \"2vw\",\n                            }}>\n                                <Tab label=\"Courses\" onClick={() => {\n                                    setView(0);\n                                }} />\n                                <Tab label=\"Tutoring\" onClick={() => {\n                                    setView(1);\n                                }} />\n                            </Tabs>\n                        </Grid>\n                        <Grid item md={1} alignContent=\"space-between\" style={{\n                            \"margin\": \"auto 0\",\n                        }}>\n                            <FilterIcon\n                                style={{\"cursor\": \"pointer\"}}\n                                onClick={(event) => {\n                                    handleFilterClick(event);\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                    <div className=\"registration-table\">\n                        {view === 0 && renderCourses()}\n                        {view === 1 && renderTutoring()}\n                    </div>\n                </Paper>\n            </Grid>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={(event) => {\n                    handleClose(event);\n                }}\n                className=\"registration-filter\"\n                anchorOrigin={{\n                    \"vertical\": \"bottom\",\n                    \"horizontal\": \"right\",\n                }}\n                transformOrigin={{\n                    \"vertical\": \"top\",\n                    \"horizontal\": \"center\",\n                }}>\n                {renderFilter(\"instructor\")}\n                {renderFilter(\"subject\")}\n                {renderFilter(\"grade\")}\n            </Popover>\n        </Grid>\n    );\n};\n\nRegistrationLanding.propTypes = {\n    \"stuffActions\": PropTypes.object,\n    \"RegistrationForms\": PropTypes.array,\n};\n\nexport default withRouter(RegistrationLanding);\n"]},"metadata":{},"sourceType":"module"}