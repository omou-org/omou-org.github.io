{"ast":null,"code":"var _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/Registration.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport * as rootActions from '../../../actions/rootActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport RegistrationUserActions from \"./RegistrationActions\";\nimport '../../../theme/theme.scss'; //Material UI Imports\n\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\nimport MobileRegistration from \"./MobileRegistration\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Categories from \"@material-ui/icons/Category\";\nimport CourseList from \"@material-ui/icons/List\";\nimport Fab from '@material-ui/core/Fab';\nimport RegistrationLanding from \"./RegistrationLanding\";\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobileViewToggle: false,\n      mobileView: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n  }\n\n  resize() {\n    let currentHideNav = window.innerWidth <= 760;\n\n    if (currentHideNav !== this.state.mobileView) {\n      this.setState({\n        mobileView: !this.state.mobileView\n      });\n    }\n  }\n\n  toggleMainView() {\n    if (this.state.mobileView) {\n      return React.createElement(MobileRegistration, {\n        courses: this.props.courses,\n        instructors: this.props.instructors,\n        categories: this.props.courseCategories,\n        categoriesViewToggle: this.state.mobileViewToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(RegistrationLanding, {\n        courses: this.props.courses,\n        categories: this.props.courseCategories,\n        instructors: this.props.instructors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n  }\n\n  toggleMobileView() {\n    this.setState(oldState => {\n      return {\n        mobileViewToggle: !oldState.mobileViewToggle\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(RegistrationUserActions //admin = {false}\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))), React.createElement(RegistrationLanding, {\n      courses: this.props.courses,\n      categories: this.props.courseCategories,\n      instructors: this.props.instructors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nRegistration.propTypes = {\n  stuffActions: PropTypes.object,\n  RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    instructors: state.Users[\"InstructorList\"],\n    courses: state.Course[\"NewCourseList\"],\n    courseCategories: state.Course[\"CourseCategories\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registrationActions: bindActionCreators(registrationActions, dispatch),\n    rootActions: bindActionCreators(rootActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/Registration.js"],"names":["connect","bindActionCreators","registrationActions","rootActions","PropTypes","React","Component","RegistrationUserActions","Hidden","MobileRegistration","Grid","Paper","Categories","CourseList","Fab","RegistrationLanding","Registration","constructor","props","state","mobileViewToggle","mobileView","componentDidMount","window","addEventListener","resize","bind","currentHideNav","innerWidth","setState","toggleMainView","courses","instructors","courseCategories","toggleMobileView","oldState","render","propTypes","stuffActions","object","RegistrationForms","array","mapStateToProps","Users","Course","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport * as rootActions from '../../../actions/rootActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport RegistrationUserActions from \"./RegistrationActions\";\nimport '../../../theme/theme.scss';\n\n//Material UI Imports\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\nimport MobileRegistration from \"./MobileRegistration\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Categories from \"@material-ui/icons/Category\";\nimport CourseList from \"@material-ui/icons/List\";\nimport Fab from '@material-ui/core/Fab';\nimport RegistrationLanding from \"./RegistrationLanding\";\n\nclass Registration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileViewToggle: false,\n            mobileView: false,\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resize.bind(this));\n        this.resize();\n    }\n\n    resize() {\n        let currentHideNav = (window.innerWidth <= 760);\n        if (currentHideNav !== this.state.mobileView) {\n            this.setState({ mobileView: !this.state.mobileView });\n        }\n    }\n\n    toggleMainView() {\n        if (this.state.mobileView) {\n            return <MobileRegistration\n                courses={this.props.courses}\n                instructors={this.props.instructors}\n                categories={this.props.courseCategories}\n                categoriesViewToggle={this.state.mobileViewToggle} />;\n        }\n        else {\n            return <RegistrationLanding\n                    courses={this.props.courses}\n                    categories={this.props.courseCategories}\n                    instructors={this.props.instructors}\n            />\n        }\n    }\n\n    toggleMobileView() {\n        this.setState((oldState) => {\n            return {\n                mobileViewToggle: !oldState.mobileViewToggle,\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"\">\n                <Grid item xs={12}>\n                    <Paper className={\"paper\"}>\n                        <Grid item lg={12}>\n                            <RegistrationUserActions\n                                //admin = {false}\n                            />\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <RegistrationLanding\n                    courses={this.props.courses}\n                    categories={this.props.courseCategories}\n                    instructors={this.props.instructors}\n                />\n                {/*<Hidden smUp>*/}\n                {/*    <Grid item>*/}\n                {/*        {*/}\n                {/*            this.state.mobileViewToggle ?*/}\n                {/*                <Fab onClick={(e) => { e.preventDefault(); this.toggleMobileView(); }}*/}\n                {/*                        className={\"button mobile-toggle\"}*/}\n                {/*                        color=\"primary\" aria-label=\"Add\"*/}\n                {/*                >*/}\n                {/*                    <CourseList className={\"icon\"} />*/}\n                {/*                </Fab> :*/}\n                {/*                <Fab*/}\n                {/*                    onClick={(e) => { e.preventDefault(); this.toggleMobileView(); }}*/}\n                {/*                    className={\"button mobile-toggle\"}*/}\n                {/*                    color=\"primary\" aria-label=\"Add\">*/}\n                {/*                    <Categories className={\"icon\"} />*/}\n                {/*                </Fab>*/}\n                {/*        }*/}\n                {/*    </Grid>*/}\n                {/*</Hidden>*/}\n            </div>\n        )\n    }\n}\n\nRegistration.propTypes = {\n    stuffActions: PropTypes.object,\n    RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        instructors: state.Users[\"InstructorList\"],\n        courses: state.Course[\"NewCourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        registrationActions: bindActionCreators(registrationActions, dispatch),\n        rootActions: bindActionCreators(rootActions, dispatch),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Registration);\n"]},"metadata":{},"sourceType":"module"}