{"ast":null,"code":"import _objectSpread from \"/Users/danielhuang/Desktop/front-end/omou-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/RegistrationCourse.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport BackButton from \"../../BackButton.js\";\nimport RegistrationActions from \"./RegistrationActions\"; //Material UI Imports\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NewUser from \"@material-ui/icons/PersonAdd\";\nimport NewTutor from \"@material-ui/icons/Group\";\nimport NewCourse from \"@material-ui/icons/School\";\nimport ClassIcon from \"@material-ui/icons/Class\";\nimport { NavLink } from \"react-router-dom\";\nimport { Divider, LinearProgress, TableBody, Typography } from \"@material-ui/core\";\nimport BackArrow from \"@material-ui/icons/ArrowBack\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CallIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\nconst rowHeadings = [{\n  id: 'Student',\n  numberic: false,\n  disablePadding: false\n}, {\n  id: 'Parent',\n  numberic: false,\n  disablePadding: false\n}, {\n  id: 'Status',\n  numberic: false,\n  disablePadding: false\n}, {\n  id: '',\n  numberic: false,\n  disablePadding: false\n}];\n\nlet TableToolbar = props => {\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, rowHeadings.map((row, i) => React.createElement(TableCell, {\n    key: i,\n    align: row.numberic ? 'right' : 'left',\n    padding: row.disablePadding ? 'none' : 'default',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, row.id))));\n};\n\nclass RegistrationCourse extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillMount() {\n    let CourseInView = this.props.courses.find(course => {\n      return course.course_id.toString() === this.props.match.params.courseID;\n    });\n    this.setState(_objectSpread({}, CourseInView));\n  }\n\n  render() {\n    let DayConverter = {\n      M: \"Monday\",\n      T: \"Tuesday\",\n      W: \"Wednesday\",\n      Tr: \"Thursday\",\n      F: \"Friday\",\n      S: \"Saturday\"\n    };\n    let Days = this.state.days.split();\n    Days = Days.map(day => {\n      return DayConverter[day];\n    });\n    let Teacher = this.props.teachers.find(teacher => {\n      return teacher.id === this.state.instructor_id;\n    });\n    let rows = [];\n    let student, row, parent, Actions;\n    this.props.courseRoster[this.state.course_id].forEach(student_id => {\n      student = this.props.students.find(studentCurr => {\n        return studentCurr.user_id === student_id;\n      });\n      parent = this.props.parents.find(parentCurr => {\n        return student.parent_id === parentCurr.user_id;\n      });\n\n      Actions = () => {\n        return React.createElement(\"div\", {\n          className: student.name + ' actions',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(CallIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(\"a\", {\n          href: \"mailto:\" + parent.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(EmailIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })), React.createElement(EditIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }));\n      };\n\n      row = [student.name, parent.name, \"Paid\", React.createElement(Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })];\n      rows.push(row);\n    });\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(RegistrationActions, {\n      courseTitle: this.state.course_title //admin = false;\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), React.createElement(Paper, {\n      className: \"paper content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(BackButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"course-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      variant: 'h3',\n      style: {\n        fontWeight: \"500\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.props.match.params.courseTitle), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(CalendarIcon, {\n      style: {\n        fontSize: \"16\"\n      },\n      align: 'left',\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: 'left',\n      style: {\n        marginLeft: '5px',\n        marginTop: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.dates)), React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"first-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(ClassIcon, {\n      style: {\n        fontSize: \"16\"\n      },\n      className: 'icon',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: 'left',\n      className: 'text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Course Information\")), React.createElement(\"div\", {\n      className: 'second-line',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      avatar: React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, Teacher.name.match(/\\b(\\w)/g).join('')),\n      label: Teacher.name,\n      className: \"chip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: 'left',\n      className: 'text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.time), React.createElement(Typography, {\n      align: 'left',\n      className: 'text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, Days), React.createElement(Typography, {\n      align: 'left',\n      className: 'text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.state.grade, \" Grade\")))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: 'left',\n      className: 'description text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.description), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(LinearProgress, {\n      color: 'primary',\n      value: this.state.filled / this.state.capacity * 100,\n      valueBuffer: 100,\n      variant: 'buffer',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(TableToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, rows.map((row, i) => {\n      return React.createElement(TableRow, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, row.map((data, j) => {\n        return React.createElement(TableCell, {\n          key: j,\n          className: \"\".concat(j % 4 === 0 ? 'bold' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, data);\n      }));\n    })))));\n  }\n\n}\n\nRegistrationCourse.propTypes = {\n  stuffActions: PropTypes.object,\n  RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    courses: state.Course[\"CourseList\"],\n    courseCategories: state.Course[\"CourseCategories\"],\n    students: state.Users[\"StudentList\"],\n    teachers: state.Users[\"TeacherList\"],\n    parents: state.Users[\"ParentList\"],\n    courseRoster: state.Course[\"CourseRoster\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registrationActions: bindActionCreators(registrationActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationCourse);","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/RegistrationCourse.js"],"names":["connect","bindActionCreators","registrationActions","PropTypes","React","Component","BackButton","RegistrationActions","Grid","Button","Paper","NewUser","NewTutor","NewCourse","ClassIcon","NavLink","Divider","LinearProgress","TableBody","Typography","BackArrow","Avatar","Chip","Table","TableHead","TableRow","TableCell","CallIcon","EmailIcon","EditIcon","CalendarIcon","rowHeadings","id","numberic","disablePadding","TableToolbar","props","map","row","i","RegistrationCourse","constructor","state","componentWillMount","CourseInView","courses","find","course","course_id","toString","match","params","courseID","setState","render","DayConverter","M","T","W","Tr","F","S","Days","days","split","day","Teacher","teachers","teacher","instructor_id","rows","student","parent","Actions","courseRoster","forEach","student_id","students","studentCurr","user_id","parents","parentCurr","parent_id","name","email","push","course_title","fontWeight","courseTitle","fontSize","marginLeft","marginTop","dates","join","time","grade","description","filled","capacity","data","j","propTypes","stuffActions","object","RegistrationForms","array","mapStateToProps","Course","courseCategories","Users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport BackButton from \"../../BackButton.js\";\nimport RegistrationActions from \"./RegistrationActions\";\n\n//Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NewUser from \"@material-ui/icons/PersonAdd\";\nimport NewTutor from \"@material-ui/icons/Group\";\nimport NewCourse from \"@material-ui/icons/School\";\nimport ClassIcon from \"@material-ui/icons/Class\"\nimport { NavLink } from \"react-router-dom\";\nimport { Divider, LinearProgress, TableBody, Typography } from \"@material-ui/core\";\nimport BackArrow from \"@material-ui/icons/ArrowBack\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CallIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\n\nconst rowHeadings = [\n    { id: 'Student', numberic: false, disablePadding: false },\n    { id: 'Parent', numberic: false, disablePadding: false },\n    { id: 'Status', numberic: false, disablePadding: false },\n    { id: '', numberic: false, disablePadding: false },\n];\n\nlet TableToolbar = props => {\n    return (<TableHead>\n        <TableRow>\n            {rowHeadings.map(\n                (row, i) => (\n                    <TableCell\n                        key={i}\n                        align={row.numberic ? 'right' : 'left'}\n                        padding={row.disablePadding ? 'none' : 'default'}\n                    >\n                        {row.id}\n                    </TableCell>\n                )\n            )}\n        </TableRow>\n    </TableHead>);\n};\n\nclass RegistrationCourse extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentWillMount() {\n        let CourseInView = this.props.courses.find((course) => {\n            return course.course_id.toString() === this.props.match.params.courseID;\n        });\n        this.setState({ ...CourseInView });\n    }\n\n    render() {\n        let DayConverter = {\n            M: \"Monday\",\n            T: \"Tuesday\",\n            W: \"Wednesday\",\n            Tr: \"Thursday\",\n            F: \"Friday\",\n            S: \"Saturday\",\n        };\n        let Days = this.state.days.split();\n        Days = Days.map((day) => {\n            return DayConverter[day];\n        });\n\n        let Teacher = this.props.teachers.find((teacher) => {\n            return teacher.id === this.state.instructor_id;\n        });\n\n        let rows = [];\n        let student, row, parent, Actions;\n        this.props.courseRoster[this.state.course_id].forEach((student_id) => {\n            student = this.props.students.find((studentCurr) => { return studentCurr.user_id === student_id });\n            parent = this.props.parents.find((parentCurr) => { return student.parent_id === parentCurr.user_id });\n            Actions = () => {\n                return <div className={student.name + ' actions'}>\n                    <CallIcon />\n                    <a href={\"mailto:\" + parent.email}>\n                        <EmailIcon />\n                    </a>\n                    <EditIcon />\n                </div>\n            };\n            row = [student.name, parent.name, \"Paid\", <Actions />];\n            rows.push(row);\n        });\n\n        return (\n            <Grid item xs={12}>\n                <Paper className={\"paper\"}>\n                    <Grid item lg={12}>\n                        <RegistrationActions\n                            courseTitle={this.state.course_title}\n                        //admin = false;\n                        />\n                    </Grid>\n                </Paper>\n                <Paper className={\"paper content\"}>\n                    <BackButton />\n                    <div className={\"course-heading\"}>\n                        <Typography align={'left'} variant={'h3'} style={{ fontWeight: \"500\" }} >\n                            {this.props.match.params.courseTitle}\n                        </Typography>\n                        <div className={\"date\"}>\n                            <CalendarIcon style={{ fontSize: \"16\" }} align={'left'} className={\"icon\"}/>\n                            <Typography align={'left'} style={{ marginLeft: '5px', marginTop: '15px' }}>\n                                {this.state.dates}\n                            </Typography>\n                        </div>\n                        <div className={\"info\"}>\n                            <div className={\"first-line\"}>\n                                <ClassIcon style={{ fontSize: \"16\" }} className={'icon'} />\n                                <Typography align={'left'} className={'text'}>\n                                    Course Information\n                                </Typography>\n                            </div>\n                            <div className={'second-line'}>\n                                <Chip\n                                    avatar={<Avatar>{Teacher.name.match(/\\b(\\w)/g).join('')}</Avatar>}\n                                    label={Teacher.name}\n                                    className={\"chip\"}\n                                />\n                                <Typography align={'left'} className={'text'}>\n                                    {this.state.time}\n                                </Typography>\n                                <Typography align={'left'} className={'text'}>\n                                    {Days}\n                                </Typography>\n                                <Typography align={'left'} className={'text'}>\n                                    {this.state.grade} Grade\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n                    <Divider />\n                    <Typography align={'left'} className={'description text'}>\n                        {this.state.description}\n                    </Typography>\n                    <Divider />\n                    <LinearProgress\n                        color={'primary'}\n                        value={(this.state.filled / this.state.capacity) * 100}\n                        valueBuffer={100}\n                        variant={'buffer'}\n                    />\n                    <Table>\n                        <TableToolbar />\n                        <TableBody>\n                            {\n                                rows.map((row, i) => {\n                                    return <TableRow key={i}>\n                                        {row.map((data, j) => {\n                                            return <TableCell key={j} className={`${j % 4 === 0 ? 'bold' : ''}`}>\n                                                {data}\n                                            </TableCell>\n                                        })}\n                                    </TableRow>\n                                })\n                            }\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n        )\n    }\n}\n\nRegistrationCourse.propTypes = {\n    stuffActions: PropTypes.object,\n    RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course[\"CourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n        students: state.Users[\"StudentList\"],\n        teachers: state.Users[\"TeacherList\"],\n        parents: state.Users[\"ParentList\"],\n        courseRoster: state.Course[\"CourseRoster\"],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        registrationActions: bindActionCreators(registrationActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegistrationCourse);"]},"metadata":{},"sourceType":"module"}