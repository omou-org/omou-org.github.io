{"ast":null,"code":"var _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/Accounts.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport './Accounts.scss';\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      usersList: [],\n      viewToggle: true // true = list, false = card view\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      usersList: this.props.teachers.concat(this.props.parents).concat(this.props.students)\n    });\n  }\n\n  handleChange(e, newTabIndex) {\n    e.preventDefault();\n    let newUsersList = [];\n\n    switch (newTabIndex) {\n      case 0:\n        newUsersList = this.props.teachers.concat(this.props.parents).concat(this.props.students);\n        break;\n\n      case 1:\n        newUsersList = this.props.teachers;\n        break;\n\n      case 2:\n        newUsersList = this.props.students;\n        break;\n\n      case 3:\n        newUsersList = this.props.parents;\n        break;\n\n      default:\n        newUsersList = this.props.teachers.concat(this.props.parents).concat(this.props.students);\n    }\n\n    this.setState({\n      value: newTabIndex,\n      usersList: newUsersList\n    });\n  }\n\n  render() {\n    // console.log(this.state.usersList);\n    let tableView = () => {\n      return React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Role\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.usersList.map(row => React.createElement(TableRow, {\n        key: row.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, row.name), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, row.email), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, row.phone_number)))));\n    };\n\n    let cardView = () => {\n      return this.state.usersList.map(user => {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(CardContent, {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"h2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, user.name), React.createElement(Typography, {\n          component: \"p\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, user.role)), React.createElement(CardActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Call\")));\n      });\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      xs: '12',\n      className: \"Accounts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: 'paper',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: 'row',\n      alignItems: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: '1',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(BackButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: '9',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: this.state.value,\n      onChange: this.handleChange,\n      variant: \"scrollable\",\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"ALL MEMBERS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"TEACHERS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"STUDENTS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"PARENTS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"ADMIN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: '2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(ListView, {\n      onClick: e => {\n        e.preventDefault();\n        this.setState({\n          viewToggle: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(CardView, {\n      onClick: e => {\n        e.preventDefault();\n        this.setState({\n          viewToggle: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      direction: 'row',\n      alignItems: 'center',\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.state.viewToggle ? tableView() : cardView())));\n  }\n\n}\n\nAccounts.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    teachers: state.Users.TeacherList,\n    parents: state.Users.ParentList,\n    students: state.Users.StudentList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Accounts);","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/Accounts.js"],"names":["connect","bindActionCreators","PropTypes","React","Component","BackButton","Grid","Card","Paper","Typography","Tabs","Tab","ListView","CardView","TableHead","TableRow","TableCell","Table","TableBody","CardContent","Button","CardActions","Accounts","constructor","props","state","value","usersList","viewToggle","handleChange","bind","componentWillMount","setState","teachers","concat","parents","students","e","newTabIndex","preventDefault","newUsersList","render","tableView","map","row","name","email","phone_number","cardView","user","role","propTypes","mapStateToProps","Users","TeacherList","ParentList","StudentList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Card, Paper, Typography} from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport './Accounts.scss';\n\nclass Accounts extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            value:0,\n            usersList: [],\n            viewToggle: true, // true = list, false = card view\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentWillMount(){\n        this.setState({\n           usersList: this.props.teachers.concat(this.props.parents).concat(this.props.students),\n        });\n    }\n\n    handleChange(e, newTabIndex){\n        e.preventDefault();\n        let newUsersList = [];\n        switch(newTabIndex){\n            case 0:\n                newUsersList = this.props.teachers.concat(this.props.parents).concat(this.props.students);\n                break;\n            case 1:\n                newUsersList = this.props.teachers;\n                break;\n            case 2:\n                newUsersList = this.props.students;\n                break;\n            case 3:\n                newUsersList = this.props.parents;\n                break;\n            default:\n                newUsersList = this.props.teachers.concat(this.props.parents).concat(this.props.students);\n        }\n        this.setState({value:newTabIndex, usersList: newUsersList});\n    }\n\n    render(){\n        // console.log(this.state.usersList);\n\n        let tableView = () => {\n            return <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Email</TableCell>\n                        <TableCell>Phone</TableCell>\n                        <TableCell>Role</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {this.state.usersList.map(row => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell>{row.email}</TableCell>\n                            <TableCell>{row.phone_number}</TableCell>\n                            {/*<TableCell align=\"right\">{row.carbs}</TableCell>*/}\n                            {/*<TableCell align=\"right\">{row.protein}</TableCell>*/}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>;\n        };\n\n        let cardView = () => {\n            return this.state.usersList.map((user)=>{\n                return <Card>\n                    <CardContent className={\"text\"}>\n                        <Typography gutterBottom variant={\"h6\"} component={\"h2\"}>\n                            {user.name}\n                        </Typography>\n                        <Typography component=\"p\">\n                           {user.role}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button\n                            size={\"small\"}\n                            color={\"secondary\"}>\n                            Call\n                        </Button>\n                    </CardActions>\n                </Card>\n            })\n        };\n\n        return (<Grid item xs={'12'} className=\"Accounts\">\n            <Paper className={'paper'}>\n                <Grid container direction={'row'} alignItems={'center'}>\n                    <Grid item xs={'1'}>\n                        <BackButton/>\n                    </Grid>\n                    <Grid item xs={'9'}>\n                        <Tabs\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            variant=\"scrollable\"\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                        >\n                            <Tab label=\"ALL MEMBERS\" />\n                            <Tab label=\"TEACHERS\" />\n                            <Tab label=\"STUDENTS\" />\n                            <Tab label=\"PARENTS\" />\n                            <Tab label=\"ADMIN\" />\n                        </Tabs>\n                    </Grid>\n                    <Grid item xs={'2'}>\n                        <ListView onClick={(e)=>{e.preventDefault(); this.setState({viewToggle: true });}}/>\n                        <CardView onClick={(e)=>{e.preventDefault(); this.setState({viewToggle: false});}}/>\n                    </Grid>\n                </Grid>\n                <Grid container direction={'row'} alignItems={'center'} spacing={3}>\n                    {\n                        this.state.viewToggle ?\n                            tableView() :\n                            cardView()\n                    }\n                </Grid>\n            </Paper>\n        </Grid>)\n    }\n}\n\nAccounts.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        teachers: state.Users.TeacherList,\n        parents: state.Users.ParentList,\n        students: state.Users.StudentList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Accounts);\n"]},"metadata":{},"sourceType":"module"}