{"ast":null,"code":"var _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/TabComponents/Bio.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from '@material-ui/core/Typography';\n\nclass Bio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillMount() {}\n\n  render() {\n    return React.createElement(Card, {\n      className: \"Bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      class: \"bioHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(Typography, {\n      className: \"bioBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.background.bio))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"BioBackground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Bio2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: \"rowPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: \"bioDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Experience:\"), React.createElement(Grid, {\n      className: \"chipPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      label: this.props.background.experience + \" years at Summit\",\n      className: \"bioChip\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      className: \"rowPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: \"bioDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Subjects offered:\"), this.props.background.subjects.map(subjects => {\n      return React.createElement(Grid, {\n        className: \"chipPadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Chip, {\n        label: subjects,\n        className: \"bioChip\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    })), React.createElement(Grid, {\n      container: true,\n      className: \"rowPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: \"bioDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Language:\"), this.props.background.languages.map(languages => {\n      return React.createElement(Grid, {\n        className: \"chipPadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Chip, {\n        label: languages,\n        className: \"bioChip\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    })))))))));\n  }\n\n}\n\nBio.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bio);","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/TabComponents/Bio.js"],"names":["connect","React","Component","Grid","Card","Chip","Typography","Bio","constructor","props","state","componentWillMount","render","background","bio","experience","subjects","map","languages","propTypes","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACxBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEH;;AAEDC,EAAAA,kBAAkB,GAAG,CAEpB;;AAGDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWI,UAAX,CAAsBC,GAD3B,CAJJ,CADJ,CADJ,EAWI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACA,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWI,UAAX,CAAsBE,UAAtB,GAAiC,kBADxC;AAEA,MAAA,SAAS,EAAC,SAFV;AAGA,MAAA,OAAO,EAAC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CADJ,EAaI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAIS,KAAKN,KAAL,CAAWI,UAAX,CAAsBG,QAAtB,CAA+BC,GAA/B,CAAoCD,QAAD,IAAY;AAAC,aACjD,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACA,QAAA,KAAK,EAAEA,QADP;AACiB,QAAA,SAAS,EAAC,SAD3B;AAEA,QAAA,OAAO,EAAC,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADiD;AAMxC,KANR,CAJT,CAbJ,EAyBI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAIS,KAAKP,KAAL,CAAWI,UAAX,CAAsBK,SAAtB,CAAgCD,GAAhC,CAAqCC,SAAD,IAAa;AAAC,aAC3D,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,SAAb;AACA,QAAA,SAAS,EAAC,SADV;AAEA,QAAA,OAAO,EAAC,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAD2D;AAM9C,KANJ,CAJT,CAzBJ,CADJ,CADJ,CADJ,CAXJ,CADJ,CADJ,CADJ;AA6DH;;AA1EuB;;AA8E5BX,GAAG,CAACY,SAAJ,GAAgB,EAAhB;;AAEA,SAASC,eAAT,CAAyBV,KAAzB,EAAgC;AAC5B,SAAO,EAAP;AAEH;;AAED,SAASW,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO,EAAP;AACH;;AAED,eAAetB,OAAO,CAClBoB,eADkB,EAElBC,kBAFkB,CAAP,CAGbd,GAHa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from '@material-ui/core/Typography';\n\nclass Bio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    componentWillMount() {\n\n    }\n\n\n    render() {\n        return (\n            <Card className={\"Bio\"}>\n                <Grid item xs={12}>\n                    <Grid container>\n                        <Grid item xs={6} >\n                            <div className=\"Bio\">\n                                <Typography class=\"bioHeader\">\n                                    Bio\n                                    </Typography>\n                                <Typography className=\"bioBody\">\n                                    {this.props.background.bio}\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className=\"BioBackground\">\n                                <div className=\"Bio2\">\n                                    <Grid>\n                                        <Grid container className=\"rowPadding\">\n                                            <Grid className=\"bioDescription\">\n                                                Experience:\n                                        </Grid>\n                                            <Grid className=\"chipPadding\">\n                                                <Chip\n                                                label={this.props.background.experience+\" years at Summit\"}\n                                                className=\"bioChip\"\n                                                variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container className=\"rowPadding\">\n                                            <Grid className=\"bioDescription\">\n                                            Subjects offered:\n                                        </Grid>\n                                                {this.props.background.subjects.map((subjects)=>{return(\n                                                <Grid className=\"chipPadding\">\n                                                    <Chip\n                                                    label={subjects} className=\"bioChip\"\n                                                    variant=\"outlined\"\n                                                    />\n                                                </Grid>)})}\n                                        </Grid>\n                                        <Grid container className=\"rowPadding\">\n                                        <Grid className=\"bioDescription\">\n                                            Language:\n                                        </Grid>\n                                                {this.props.background.languages.map((languages)=>{return(\n                                        <Grid className=\"chipPadding\">\n                                            <Chip label={languages}\n                                            className=\"bioChip\"\n                                            variant=\"outlined\"\n                                            />\n                                            </Grid>)})}\n                                        </Grid>\n                                        </Grid>\n                                </div>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Card>)\n    }\n\n}\n\nBio.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Bio);"]},"metadata":{},"sourceType":"module"}