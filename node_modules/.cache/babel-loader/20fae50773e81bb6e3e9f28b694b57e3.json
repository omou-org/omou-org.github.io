{"ast":null,"code":"var _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/ProfileCard.js\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { withRouter } from \"react-router-dom\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneOutlined\";\nimport { ReactComponent as IDIcon } from \"@svgr/webpack?-svgo,+ref!../../identifier.svg\";\nimport './Accounts.scss';\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass ProfileCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      usersList: [],\n      viewToggle: true // true = list, false = card view\n\n    };\n  }\n\n  componentWillMount() {}\n\n  addDashes(string) {\n    return \"(\".concat(string.slice(0, 3), \"-\").concat(string.slice(3, 6), \"-\").concat(string.slice(6, 15), \")\");\n  }\n\n  goToRoute(route) {\n    this.props.history.push(this.props.match.url + route);\n  }\n\n  stringToColor(string) {\n    let hash = 0;\n    let i;\n    /* eslint-disable no-bitwise */\n\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let colour = \"#\";\n\n    for (i = 0; i < 3; i += 1) {\n      const value = hash >> i * 8 & 0xff;\n      colour += \"00\".concat(value.toString(16)).substr(-2);\n    }\n    /* eslint-enable no-bitwise */\n\n\n    return colour;\n  }\n\n  render() {\n    let styles = username => ({\n      backgroundColor: this.stringToColor(username),\n      color: \"white\",\n      margin: 9,\n      width: 120,\n      height: 120,\n      fontSize: 40,\n      margin: 20\n    });\n\n    return React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: \"ProfileCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Card, {\n      key: this.props.user.user_id,\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: event => {\n        event.preventDefault();\n        this.goToRoute(\"/\".concat(this.props.user.role, \"/\").concat(this.props.user.user_id));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      style: styles(this.props.user.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.user.name.match(/\\b(\\w)/g).join(\"\"))), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      component: \"h2\",\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.user.name), React.createElement(Typography, {\n      component: \"p\",\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"userLabel \".concat(this.props.user.role),\n      label: this.props.user.role.charAt(0).toUpperCase() + this.props.user.role.slice(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 2,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(IDIcon, {\n      width: 22,\n      height: 22,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 10,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"#\", this.props.user.user_id), React.createElement(Grid, {\n      item: true,\n      md: 2,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(PhoneIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 10,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.addDashes(this.props.user.phone_number))), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 2,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 10,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.props.user.email)))))))));\n  }\n\n}\n\nProfileCard.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    instructors: state.Users.InstructorList,\n    parents: state.Users.ParentList,\n    students: state.Users.StudentList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfileCard));","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/ProfileCard.js"],"names":["connect","React","Component","BackButton","Grid","Card","Paper","Typography","Tabs","Tab","ListView","CardView","TableHead","TableRow","TableCell","Table","TableBody","CardContent","Button","Chip","CardActions","withRouter","EmailIcon","PhoneIcon","Avatar","ProfileCard","constructor","props","state","value","usersList","viewToggle","componentWillMount","addDashes","string","slice","goToRoute","route","history","push","match","url","stringToColor","hash","i","length","charCodeAt","colour","toString","substr","render","styles","username","backgroundColor","color","margin","width","height","fontSize","user","user_id","cursor","event","preventDefault","role","name","join","charAt","toUpperCase","marginTop","phone_number","email","propTypes","mapStateToProps","instructors","Users","InstructorList","parents","ParentList","students","StudentList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { withRouter } from \"react-router-dom\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneOutlined\";\n\nimport { ReactComponent as IDIcon } from \"../../identifier.svg\";\nimport './Accounts.scss';\n\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass ProfileCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            usersList: [],\n            viewToggle: true, // true = list, false = card view\n        };\n    }\n\n    componentWillMount() {\n\n    }\n\n    addDashes(string) {\n        return(\n             `(${string.slice(0, 3)}-${string.slice(3, 6)}-${string.slice(6, 15)})`);\n    }\n\n    goToRoute(route) {\n        this.props.history.push(this.props.match.url + route);\n    }\n    stringToColor(string) {\n        let hash = 0;\n        let i;\n\n        /* eslint-disable no-bitwise */\n        for (i = 0; i < string.length; i += 1) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        let colour = \"#\";\n\n        for (i = 0; i < 3; i += 1) {\n            const value = (hash >> (i * 8)) & 0xff;\n            colour += `00${value.toString(16)}`.substr(-2);\n        }\n        /* eslint-enable no-bitwise */\n\n        return colour;\n    }\n\n    render() {\n        let styles = (username) => ({\n            backgroundColor: this.stringToColor(username),\n            color: \"white\",\n            margin: 9,\n            width: 120,\n            height: 120,\n            fontSize: 40,\n            margin: 20,\n        });\n\n        return (\n            <Grid item xs={6} className=\"ProfileCard\">\n                <Card key={this.props.user.user_id}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={(event) => {\n                        event.preventDefault();\n                        this.goToRoute(`/${this.props.user.role}/${this.props.user.user_id}`);\n                    }}>\n                    <Grid container>\n                        <Grid item xs={4}>\n                            <Avatar\n                                style={styles(this.props.user.name)}>{this.props.user.name.match(/\\b(\\w)/g).join(\"\")}\n                            </Avatar>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <CardContent className={\"text\"}>\n\n                                <Typography gutterBottom variant={\"h6\"} component={\"h2\"} align={'left'}>\n                                    {this.props.user.name}\n                                </Typography>\n                                <Typography component=\"p\" align={'left'}>\n                                    <Chip\n                                        style={{ cursor: \"pointer\" }}\n                                        className={`userLabel ${this.props.user.role}`}\n                                        label={this.props.user.role.charAt(0).toUpperCase() + this.props.user.role.slice(1)}\n                                    />\n                                </Typography>\n                                <Typography>\n                                    <Grid item xs={8} style={{ marginTop: 10 }}>\n                                        <Grid container>\n                                            <Grid item md={2} align=\"left\">\n                                                <IDIcon\n                                                    width={22}\n                                                    height={22} />\n                                            </Grid>\n                                            <Grid item md={10} align=\"left\">\n                                                #{this.props.user.user_id}\n                                            </Grid>\n                                            <Grid item md={2} align=\"left\">\n                                                <PhoneIcon />\n                                            </Grid>\n                                            <Grid item md={10} align=\"left\">\n                                                {this.addDashes(this.props.user.phone_number)}\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container>\n                                            <Grid item md={2} align=\"left\">\n                                                <EmailIcon />\n                                            </Grid>\n                                            <Grid item md={10} align=\"left\">\n                                                {this.props.user.email}\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Typography>\n                            </CardContent>\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n        )\n    }\n}\n\nProfileCard.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        instructors: state.Users.InstructorList,\n        parents: state.Users.ParentList,\n        students: state.Users.StudentList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProfileCard));\n"]},"metadata":{},"sourceType":"module"}