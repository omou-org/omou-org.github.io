{"ast":null,"code":"var _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Scheduler/Scheduler.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listViewPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport './scheduler.scss';\n\nclass Scheduler extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.handleDateClick = arg => {\n      //confirm('Would you like to add an event to ' + arg.dateStr + ' ?')\n      if (true) {\n        this.setState({\n          // add new event data\n          calendarEvents: this.state.calendarEvents.concat({\n            // creates a new array\n            title: 'New Event',\n            start: arg.date,\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate('2000-01-01'); // call a method on the Calendar object\n    };\n\n    this.state = {\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n      {\n        title: 'Event Now',\n        start: new Date()\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"demo-app-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"toggle weekends\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: this.gotoPast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"go to a date in the past\"), \"\\xA0 (also, click a date/time to add an event)\"), React.createElement(\"div\", {\n      className: \"demo-app-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listViewPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: this.state.calendarEvents,\n      dateClick: this.handleDateClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}\n\nScheduler.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Scheduler);","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Scheduler/Scheduler.js"],"names":["connect","bindActionCreators","PropTypes","React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","listViewPlugin","interactionPlugin","Scheduler","constructor","props","calendarComponentRef","createRef","handleDateClick","arg","setState","calendarEvents","state","concat","title","start","date","allDay","toggleWeekends","calendarWeekends","gotoPast","calendarApi","current","getApi","gotoDate","Date","render","left","center","right","propTypes","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAO,kBAAP;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAC9BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SASlBC,oBATkB,GASKV,KAAK,CAACW,SAAN,EATL;;AAAA,SAWlBC,eAXkB,GAWCC,GAAD,IAAS;AACvB;AACA,UAAI,IAAJ,EAAU;AACN,aAAKC,QAAL,CAAc;AAAG;AACbC,UAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWD,cAAX,CAA0BE,MAA1B,CAAiC;AAAE;AAC/CC,YAAAA,KAAK,EAAE,WADsC;AAE7CC,YAAAA,KAAK,EAAEN,GAAG,CAACO,IAFkC;AAG7CC,YAAAA,MAAM,EAAER,GAAG,CAACQ;AAHiC,WAAjC;AADN,SAAd;AAOH;AACJ,KAtBiB;;AAAA,SAwBlBC,cAxBkB,GAwBD,MAAM;AACnB,WAAKR,QAAL,CAAc;AAAE;AACZS,QAAAA,gBAAgB,EAAE,CAAC,KAAKP,KAAL,CAAWO;AADpB,OAAd;AAGH,KA5BiB;;AAAA,SA8BlBC,QA9BkB,GA8BP,MAAM;AACb,UAAIC,WAAW,GAAG,KAAKf,oBAAL,CAA0BgB,OAA1B,CAAkCC,MAAlC,EAAlB;AACAF,MAAAA,WAAW,CAACG,QAAZ,CAAqB,YAArB,EAFa,CAEsB;AACtC,KAjCiB;;AAEd,SAAKZ,KAAL,GAAa;AACTO,MAAAA,gBAAgB,EAAE,IADT;AAETR,MAAAA,cAAc,EAAE,CAAE;AACd;AAACG,QAAAA,KAAK,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAE,IAAIU,IAAJ;AAA5B,OADY;AAFP,KAAb;AAMH;;AA2BDC,EAAAA,MAAM,GAAE;AACJ,WAAQ;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAG,KAAKR,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,UAEI;AAAQ,MAAA,OAAO,EAAG,KAAKE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,mDADI,EAMJ;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AACI,MAAA,WAAW,EAAC,cADhB;AAEI,MAAA,MAAM,EAAE;AACJO,QAAAA,IAAI,EAAE,iBADF;AAEJC,QAAAA,MAAM,EAAE,OAFJ;AAGJC,QAAAA,KAAK,EAAE;AAHH,OAFZ;AAOI,MAAA,OAAO,EAAE,CAAE9B,aAAF,EAAiBC,cAAjB,EAAiCE,iBAAjC,EAAoDD,cAApD,CAPb;AAQI,MAAA,GAAG,EAAG,KAAKK,oBARf;AASI,MAAA,QAAQ,EAAG,KAAKM,KAAL,CAAWO,gBAT1B;AAUI,MAAA,MAAM,EAAG,KAAKP,KAAL,CAAWD,cAVxB;AAWI,MAAA,SAAS,EAAG,KAAKH,eAXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANI,CAAR;AAsBH;;AA3D6B;;AA8DlCL,SAAS,CAAC2B,SAAV,GAAsB,EAAtB;;AAEA,SAASC,eAAT,CAAyBnB,KAAzB,EAAgC;AAC5B,SAAO,EAAP;AACH;;AAED,SAASoB,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO,EAAP;AACH;;AAED,eAAexC,OAAO,CAClBsC,eADkB,EAElBC,kBAFkB,CAAP,CAGb7B,SAHa,CAAf","sourcesContent":["import {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listViewPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction'\nimport './scheduler.scss'\n\nclass Scheduler extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            calendarWeekends: true,\n            calendarEvents: [ // initial event data\n                {title: 'Event Now', start: new Date()}\n            ]\n        }\n    }\n    calendarComponentRef = React.createRef();\n\n    handleDateClick = (arg) => {\n        //confirm('Would you like to add an event to ' + arg.dateStr + ' ?')\n        if (true) {\n            this.setState({  // add new event data\n                calendarEvents: this.state.calendarEvents.concat({ // creates a new array\n                    title: 'New Event',\n                    start: arg.date,\n                    allDay: arg.allDay\n                })\n            })\n        }\n    };\n\n    toggleWeekends = () => {\n        this.setState({ // update a property\n            calendarWeekends: !this.state.calendarWeekends\n        })\n    };\n\n    gotoPast = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.gotoDate('2000-01-01') // call a method on the Calendar object\n    };\n\n    render(){\n        return (<div className=\"\">\n            <div className='demo-app-top'>\n                <button onClick={ this.toggleWeekends }>toggle weekends</button>&nbsp;\n                <button onClick={ this.gotoPast }>go to a date in the past</button>&nbsp;\n                (also, click a date/time to add an event)\n            </div>\n            <div className='demo-app-calendar'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    header={{\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n                    }}\n                    plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin, listViewPlugin ]}\n                    ref={ this.calendarComponentRef }\n                    weekends={ this.state.calendarWeekends }\n                    events={ this.state.calendarEvents }\n                    dateClick={ this.handleDateClick }\n                />\n            </div>\n        </div>)\n    }\n}\n\nScheduler.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Scheduler);\n"]},"metadata":{},"sourceType":"module"}