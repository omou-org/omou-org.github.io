{"ast":null,"code":"var _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/FullRegistration.js\";\nimport React, { Component } from 'react'; //Material UI Imports\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\"; // import Dialog from \"@material-ui/core/Modal\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CircularProgress, Typography } from \"@material-ui/core\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport ExpandIcon from \"@material-ui/icons/ExpandMore\";\nimport ShrinkIcon from \"@material-ui/icons/ExpandLess\";\nimport TableSortLabel from '@material-ui/core/TableSortLabel'; //Local Component Imports\n\nimport './registration.scss';\nimport Grow from \"@material-ui/core/Grow\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { withRouter } from 'react-router';\nconst rowHeadings = [{\n  id: 'Course',\n  numberic: false,\n  disablePadding: false\n}, {\n  id: 'Instructor',\n  numberic: false,\n  disablePadding: false\n}, {\n  id: 'Registration Status',\n  numberic: false,\n  disablePadding: false\n}, {\n  id: 'Register',\n  numberic: false,\n  disablePadding: false\n}];\n\nclass FullRegistration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxCategory: 2,\n      minCategory: 0,\n      coursePopup: false,\n      ascendingOrder: true,\n      sortCategory: \"Course\" // allowOpen: true,\n\n    };\n  }\n\n  forwardCategories() {\n    this.setState(oldState => {\n      if (oldState.maxCategory + 1 < this.props.categories.length) {\n        return {\n          maxCategory: oldState.maxCategory + 1,\n          minCategory: oldState.minCategory + 1\n        };\n      }\n    });\n  }\n\n  backCategories() {\n    this.setState(oldState => {\n      if (oldState.minCategory - 1 >= 0) {\n        return {\n          maxCategory: oldState.maxCategory - 1,\n          minCategory: oldState.minCategory - 1\n        };\n      }\n    });\n  }\n\n  expandCategories() {\n    let newMaxCategory = 0;\n    let newMinCategory = 0;\n\n    if (this.state.maxCategory === this.props.courses.length - 1) {\n      newMaxCategory = 2;\n      newMinCategory = 0;\n    } else {\n      newMaxCategory = this.props.courses.length - 1;\n      newMinCategory = 0;\n    }\n\n    this.setState(old => {\n      return {\n        maxCategory: newMaxCategory,\n        minCategory: newMinCategory,\n        expandCategory: !old.expandCategory\n      };\n    });\n  }\n\n  goToRoute(route) {\n    this.props.history.push(route);\n  } // getter = function to get the value to compare\n\n\n  stableCmp(course1, course2, getter) {\n    const sortOrder = this.state.ascendingOrder ? 1 : -1;\n\n    if (getter(course1.course) > getter(course2.course)) {\n      return sortOrder;\n    }\n\n    if (getter(course1.course) < getter(course2.course)) {\n      return -sortOrder;\n    }\n\n    return course2.index - course1.index;\n  }\n\n  sortCourses() {\n    let courses = JSON.parse(JSON.stringify(this.props.courses)); // preserve index for stable sort\n\n    courses = courses.map((course, index) => ({\n      course,\n      index\n    }));\n    courses.sort((course1, course2) => {\n      switch (this.state.sortCategory) {\n        case \"Tuition\":\n          return this.stableCmp(course1, course2, ({\n            tuition\n          }) => tuition);\n\n        case \"Course\":\n          return this.stableCmp(course1, course2, ({\n            course_title\n          }) => course_title);\n\n        case \"Registration Status\":\n          return this.stableCmp(course1, course2, ({\n            capacity,\n            filled\n          }) => filled);\n\n        default:\n          return course2.index - course1.index;\n      }\n    });\n    courses = courses.map(({\n      course\n    }) => course);\n    return courses;\n  }\n\n  updateSort(rowID) {\n    this.setState(prevState => {\n      if (prevState.sortCategory === rowID) {\n        return {\n          ascendingOrder: !prevState.ascendingOrder\n        };\n      } else {\n        return {\n          sortCategory: rowID\n        };\n      }\n    });\n  }\n\n  getInstructorNameByID(teacher_id) {\n    let teacherName = this.props.teachers.find(teacher => {\n      return teacher.id === teacher_id;\n    });\n    teacherName = teacherName.name;\n    return teacherName;\n  }\n\n  renderTableHeader() {\n    return React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, rowHeadings.map(row => React.createElement(TableCell, {\n      key: row.id,\n      align: row.numberic ? \"right\" : \"left\",\n      padding: row.disablePadding ? \"none\" : \"default\",\n      sortDirection: this.state.ascendingOrder ? \"asc\" : \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: this.state.sortCategory === row.id,\n      direction: this.state.ascendingOrder ? \"asc\" : \"desc\",\n      onClick: this.updateSort.bind(this, row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, row.id)))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: \"course-categories\",\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.minCategory !== 0 ? \"visible\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(BackIcon, {\n      className: \"control back \",\n      onClick: e => {\n        e.preventDefault();\n        this.backCategories.bind(this)();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), this.props.categories.map((category, i) => {\n      if (this.state.minCategory <= i && i <= this.state.maxCategory) {\n        return React.createElement(Grow, {\n          in: this.state.minCategory <= i && i <= this.state.maxCategory,\n          key: category.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"category-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(CardContent, {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"h2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, category.cat_title), React.createElement(Typography, {\n          component: \"p\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"category description\")), React.createElement(CardActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(Button, {\n          component: NavLink,\n          to: '/registration/category/' + category.id.toString(),\n          size: \"small\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, \"Explore\")))));\n      }\n\n      return '';\n    }), React.createElement(\"div\", {\n      className: this.state.maxCategory !== this.props.courses.length - 1 ? \"visible\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(ForwardIcon, {\n      className: \"control forward\",\n      onClick: e => {\n        e.preventDefault();\n        this.forwardCategories.bind(this)();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.state.expandCategory ? \"\" : \"visible\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(ExpandIcon, {\n      className: \"control expand\",\n      onClick: e => {\n        e.preventDefault();\n        this.expandCategories.bind(this)();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.state.expandCategory ? \"visible\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(ShrinkIcon, {\n      className: \"control shrink\",\n      onClick: e => {\n        e.preventDefault();\n        this.expandCategories.bind(this)();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })))), React.createElement(Typography, {\n      className: \"popular-courses\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Popular Courses\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Grow, {\n      in: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, this.renderTableHeader(), React.createElement(TableBody, {\n      className: \"pop-courses-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, this.sortCourses().map((course, i) => React.createElement(TableRow, {\n      key: course.course_title,\n      className: \"row\",\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      onClick: e => {\n        e.preventDefault();\n        this.goToRoute('/registration/course/' + course.course_id + \"/\" + course.course_title);\n      },\n      style: {\n        textDecoration: 'none',\n        cursor: 'pointer'\n      },\n      align: \"left\",\n      className: \"course-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, course.course_title), React.createElement(TableCell, {\n      onClick: e => {\n        e.preventDefault();\n        this.goToRoute('/registration/course/' + course.course_id + \"/\" + course.course_title);\n      },\n      style: {\n        textDecoration: 'none',\n        cursor: 'pointer'\n      },\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, this.getInstructorNameByID.bind(this)(course.instructor_id)), React.createElement(TableCell, {\n      onClick: e => {\n        e.preventDefault();\n        this.goToRoute('/registration/course/' + course.course_id + \"/\" + course.course_title);\n      },\n      style: {\n        textDecoration: 'none',\n        cursor: 'pointer'\n      },\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      className: 'space-left-progress',\n      size: 30,\n      thickness: 5,\n      value: course.filled / course.capacity * 100,\n      variant: 'static',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'space-left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, course.filled, \" / \", course.capacity)), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Button, {\n      component: NavLink,\n      onClick: () => {\n        if (course.capacity > course.filled) {\n          this.goToRoute(\"/registration/form/course/\".concat(encodeURIComponent(course.course_title)));\n        } else {\n          alert(\"The course is filled!\");\n        }\n      },\n      variant: \"contained\",\n      disabled: course.capacity <= course.filled,\n      color: \"primary\",\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"REGISTER\")))))))))));\n  }\n\n}\n\nexport default withRouter(FullRegistration);","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/FullRegistration.js"],"names":["React","Component","TableHead","TableRow","TableCell","Paper","Table","TableBody","Button","Grid","Hidden","Card","CardMedia","CardContent","CircularProgress","Typography","CardActions","ForwardIcon","BackIcon","ExpandIcon","ShrinkIcon","TableSortLabel","Grow","NavLink","Redirect","withRouter","rowHeadings","id","numberic","disablePadding","FullRegistration","constructor","props","state","maxCategory","minCategory","coursePopup","ascendingOrder","sortCategory","forwardCategories","setState","oldState","categories","length","backCategories","expandCategories","newMaxCategory","newMinCategory","courses","old","expandCategory","goToRoute","route","history","push","stableCmp","course1","course2","getter","sortOrder","course","index","sortCourses","JSON","parse","stringify","map","sort","tuition","course_title","capacity","filled","updateSort","rowID","prevState","getInstructorNameByID","teacher_id","teacherName","teachers","find","teacher","name","renderTableHeader","row","bind","render","display","e","preventDefault","category","i","cat_title","toString","marginTop","course_id","textDecoration","cursor","instructor_id","encodeURIComponent","alert"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n//Material UI Imports\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\n// import Dialog from \"@material-ui/core/Modal\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {CircularProgress, Typography} from \"@material-ui/core\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport ExpandIcon from \"@material-ui/icons/ExpandMore\";\nimport ShrinkIcon from \"@material-ui/icons/ExpandLess\";\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\n//Local Component Imports\nimport './registration.scss'\nimport Grow from \"@material-ui/core/Grow\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {withRouter} from 'react-router'\n\nconst rowHeadings = [\n    {id:'Course', numberic:false, disablePadding: false},\n    {id:'Instructor', numberic:false, disablePadding: false},\n    {id:'Registration Status', numberic:false, disablePadding: false},\n    {id:'Register', numberic:false, disablePadding: false}\n];\n\nclass FullRegistration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            maxCategory: 2,\n            minCategory: 0,\n            coursePopup: false,\n            ascendingOrder: true,\n            sortCategory: \"Course\",\n            // allowOpen: true,\n        };\n    }\n\n    forwardCategories(){\n        this.setState((oldState)=>{\n            if(oldState.maxCategory + 1 < this.props.categories.length){\n                return {\n                    maxCategory: oldState.maxCategory+1,\n                    minCategory: oldState.minCategory+1\n                }\n            }\n        });\n    }\n\n    backCategories(){\n        this.setState((oldState)=>{\n            if(oldState.minCategory - 1 >= 0){\n                return {\n                    maxCategory: oldState.maxCategory-1,\n                    minCategory: oldState.minCategory-1\n                }\n            }\n        });\n    }\n\n    expandCategories(){\n        let newMaxCategory = 0;\n        let newMinCategory = 0;\n        if(this.state.maxCategory === this.props.courses.length-1){\n            newMaxCategory = 2;\n            newMinCategory = 0;\n        } else {\n            newMaxCategory = this.props.courses.length - 1;\n            newMinCategory = 0;\n        }\n        this.setState( (old)=>{\n            return {\n                maxCategory: newMaxCategory,\n                minCategory: newMinCategory,\n                expandCategory: !old.expandCategory\n            }\n        });\n    }\n\n    goToRoute(route){\n        this.props.history.push(route);\n    }\n\n    // getter = function to get the value to compare\n    stableCmp(course1, course2, getter) {\n        const sortOrder = this.state.ascendingOrder ? 1 : -1;\n        if (getter(course1.course) > getter(course2.course)) {\n            return sortOrder;\n        }\n        if (getter(course1.course) < getter(course2.course)) {\n            return -sortOrder;\n        }\n        return course2.index - course1.index;\n    }\n\n    sortCourses() {\n        let courses = JSON.parse(JSON.stringify(this.props.courses));\n        // preserve index for stable sort\n        courses = courses.map((course, index) => ({course, index}));\n        courses.sort((course1, course2) => {\n            switch (this.state.sortCategory) {\n                case \"Tuition\":\n                    return this.stableCmp(course1, course2, ({tuition}) => tuition);\n                case \"Course\":\n                    return this.stableCmp(course1, course2, ({course_title}) => course_title);\n                case \"Registration Status\":\n                    return this.stableCmp(course1, course2, ({capacity, filled}) => filled);\n                default:\n                    return course2.index - course1.index;\n            }\n        });\n        courses = courses.map(({course}) => course);\n        return courses;\n    }\n\n    updateSort(rowID) {\n        this.setState((prevState) => {\n            if (prevState.sortCategory === rowID) {\n                return {\n                    ascendingOrder: !prevState.ascendingOrder,\n                };\n            } else {\n                return {\n                    sortCategory: rowID,\n                };\n            }\n        });\n    }\n\n    getInstructorNameByID(teacher_id){\n        let teacherName=this.props.teachers.find((teacher)=>{\n            return teacher.id===teacher_id;\n        });\n       teacherName=teacherName.name;\n       return teacherName;\n    }\n\n    renderTableHeader() {\n        return (\n            <TableHead>\n                <TableRow>\n                    {rowHeadings.map((row) => (\n                        <TableCell\n                            key={row.id}\n                            align={row.numberic ? \"right\" : \"left\"}\n                            padding={row.disablePadding ? \"none\" : \"default\"}\n                            sortDirection={this.state.ascendingOrder ? \"asc\" : \"desc\"}>\n                            <TableSortLabel\n                                active={this.state.sortCategory === row.id}\n                                direction={this.state.ascendingOrder ? \"asc\" : \"desc\"}\n                                onClick={this.updateSort.bind(this, row.id)}>\n                                {row.id}\n                            </TableSortLabel>\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"\">\n                <Grid container>\n                    <Grid item xs={12} style={{display:'none'}}>\n                        <Grid container className={\"course-categories\"} spacing={16}>\n                            <div className={this.state.minCategory !== 0 ? \"visible\" : \"\"}>\n                                <BackIcon className={`control back `}\n                                    onClick={(e) => {e.preventDefault(); this.backCategories.bind(this)()}} />\n                            </div>\n                            {\n                                this.props.categories.map((category, i) => {\n                                    if (this.state.minCategory <= i && i <= this.state.maxCategory) {\n                                        return <Grow in={this.state.minCategory <= i && i <= this.state.maxCategory} key={category.id}>\n                                            <Grid item xs={4} >\n                                                <Card className={\"category-card\"}>\n                                                    {/*<CardMedia*/}\n                                                    {/*className={\"media\"}*/}\n                                                    {/*image={\"https://www.google.com/url?sa=i&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwjBz-2K9ZviAhWiGDQIHdopCZYQjRx6BAgBEAU&url=https%3A%2F%2Fwww.losdschools.org%2Fdomain%2F1704&psig=AOvVaw0GpyRGZMw9QDj5zOLnmw85&ust=1557954002247055\"}*/}\n                                                    {/*title={\"AP Test Logo\"}/>*/}\n                                                    <CardContent className={\"text\"}>\n                                                        <Typography gutterBottom variant={\"h6\"} component={\"h2\"}>\n                                                            {category.cat_title}\n                                                        </Typography>\n                                                        <Typography component=\"p\">\n                                                            category description\n                                                        </Typography>\n                                                    </CardContent>\n                                                    <CardActions>\n                                                        <Button\n                                                            component={NavLink}\n                                                            to={'/registration/category/' + category.id.toString()}\n                                                            size={\"small\"}\n                                                            color={\"secondary\"}>\n                                                            Explore\n                                                        </Button>\n                                                    </CardActions>\n                                                </Card>\n                                            </Grid>\n                                        </Grow>\n                                    }\n                                    return '';\n                                })\n                            }\n                            <div className={this.state.maxCategory !== this.props.courses.length - 1 ? \"visible\" : \"\"}>\n                                <ForwardIcon className={`control forward`}\n                                    onClick={(e) => {e.preventDefault(); this.forwardCategories.bind(this)()}} />\n                            </div>\n                            <div className={this.state.expandCategory ? \"\" : \"visible\"}>\n                                <ExpandIcon className={`control expand`}\n                                    onClick={(e) => {e.preventDefault(); this.expandCategories.bind(this)()}} />\n                            </div>\n                            <div className={this.state.expandCategory ? \"visible\" : \"\"}>\n                                <ShrinkIcon className={`control shrink`}\n                                    onClick={(e) => {e.preventDefault(); this.expandCategories.bind(this)()}} />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Typography className={\"popular-courses\"} align={\"left\"}>\n                        Popular Courses\n                    </Typography>\n                    <Grid item xs={12} style={{marginTop:'2%'}}>\n                        <Paper className={\"paper\"}>\n                            <Grow in={true}>\n                                <Table>\n                                    {this.renderTableHeader()}\n                                    <TableBody className={\"pop-courses-table\"}>\n                                        {\n                                            this.sortCourses().map((course, i) => (\n                                                <TableRow key={course.course_title}\n                                                    className=\"row\"\n                                                    hover>\n                                                    <TableCell\n                                                        onClick={(e) => {e.preventDefault(); this.goToRoute('/registration/course/' + course.course_id + \"/\" + course.course_title)}}\n                                                        style={{textDecoration: 'none', cursor: 'pointer'}}\n                                                        align=\"left\"\n                                                        className={\"course-title\"}>{course.course_title}</TableCell>\n                                                    <TableCell\n                                                        onClick={(e) => {e.preventDefault(); this.goToRoute('/registration/course/' + course.course_id + \"/\" + course.course_title)}}\n                                                        style={{textDecoration: 'none', cursor: 'pointer'}}\n                                                        align=\"left\">\n                                                        {this.getInstructorNameByID.bind(this)(course.instructor_id)}\n                                                        </TableCell>\n                                                    <TableCell\n                                                        onClick={(e) => {e.preventDefault(); this.goToRoute('/registration/course/' + course.course_id + \"/\" + course.course_title)}}\n                                                        style={{textDecoration: 'none', cursor: 'pointer'}}\n                                                        align=\"left\">\n                                                        <CircularProgress\n                                                            className={'space-left-progress'}\n                                                            size={30}\n                                                            thickness={5}\n                                                            value={((course.filled) / course.capacity) * 100}\n                                                            variant={'static'}\n                                                        />\n                                                        <div className={'space-left'}>\n                                                            {(course.filled)} / {course.capacity}\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <Button component={NavLink}\n                                                            onClick={() => {\n                                                                if(course.capacity > course.filled){\n                                                                    this.goToRoute(`/registration/form/course/${encodeURIComponent(course.course_title)}`);\n                                                                } else {\n                                                                    alert(\"The course is filled!\");\n                                                                }\n                                                            }}\n                                                            variant=\"contained\"\n                                                            disabled={course.capacity <= course.filled}\n                                                            color=\"primary\"\n                                                            className=\"button\">REGISTER</Button>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))\n                                        }\n                                    </TableBody>\n                                </Table>\n                            </Grow>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(FullRegistration);"]},"metadata":{},"sourceType":"module"}