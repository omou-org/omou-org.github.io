{"ast":null,"code":"var _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/ProfileCard.js\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { withRouter } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass ProfileCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      usersList: [],\n      viewToggle: true // true = list, false = card view\n\n    };\n  }\n\n  componentWillMount() {}\n\n  goToRoute(route) {\n    this.props.history.push(this.props.match.url + route);\n  }\n\n  stringToColor(string) {\n    let hash = 0;\n    let i;\n    /* eslint-disable no-bitwise */\n\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let colour = \"#\";\n\n    for (i = 0; i < 3; i += 1) {\n      const value = hash >> i * 8 & 0xff;\n      colour += \"00\".concat(value.toString(16)).substr(-2);\n    }\n    /* eslint-enable no-bitwise */\n\n\n    return colour;\n  }\n\n  render() {\n    let styles = username => ({\n      backgroundColor: this.stringToColor(username),\n      color: \"white\",\n      margin: 9,\n      width: 38,\n      height: 38,\n      fontSize: 14\n    });\n\n    return React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Card, {\n      key: this.props.user.user_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      component: \"h2\",\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.user.name), React.createElement(Typography, {\n      component: \"p\",\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.user.role)), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Call\"))));\n  }\n\n}\n\nProfileCard.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    instructors: state.Users.InstructorList,\n    parents: state.Users.ParentList,\n    students: state.Users.StudentList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfileCard));","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/ProfileCard.js"],"names":["connect","React","Component","BackButton","Grid","Card","Paper","Typography","Tabs","Tab","ListView","CardView","TableHead","TableRow","TableCell","Table","TableBody","CardContent","Button","CardActions","withRouter","Avatar","ProfileCard","constructor","props","state","value","usersList","viewToggle","componentWillMount","goToRoute","route","history","push","match","url","stringToColor","string","hash","i","length","charCodeAt","colour","toString","substr","render","styles","username","backgroundColor","color","margin","width","height","fontSize","user","user_id","name","role","propTypes","mapStateToProps","instructors","Users","InstructorList","parents","ParentList","students","StudentList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Card, Paper, Typography} from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport {withRouter} from \"react-router-dom\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass ProfileCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            usersList: [],\n            viewToggle: true, // true = list, false = card view\n        };\n    }\n\n    componentWillMount() {\n\n    }\n\n    goToRoute(route) {\n        this.props.history.push(this.props.match.url + route);\n    }\n    stringToColor(string) {\n        let hash = 0;\n        let i;\n\n        /* eslint-disable no-bitwise */\n        for (i = 0; i < string.length; i += 1) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        let colour = \"#\";\n\n        for (i = 0; i < 3; i += 1) {\n            const value = (hash >> (i * 8)) & 0xff;\n            colour += `00${value.toString(16)}`.substr(-2);\n        }\n        /* eslint-enable no-bitwise */\n\n        return colour;\n    }\n\n    render() {\n        let styles = (username) => ({\n            backgroundColor: this.stringToColor(username),\n            color: \"white\",\n            margin: 9,\n            width: 38,\n            height: 38,\n            fontSize: 14,\n        });\n\n        return (\n            <Grid item xs={3}>\n                <Card key={this.props.user.user_id}>\n                    <CardContent className={\"text\"}>\n                        <Typography gutterBottom variant={\"h6\"} component={\"h2\"} align={'left'}>\n                            {this.props.user.name}\n                        </Typography>\n                        <Typography component=\"p\" align={'left'}>\n                            {this.props.user.role}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button\n                            size={\"small\"}\n                            color={\"secondary\"}>\n                            Call\n                        </Button>\n                    </CardActions>\n                </Card>\n            </Grid>\n        )\n    }\n}\n\nProfileCard.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        instructors: state.Users.InstructorList,\n        parents: state.Users.ParentList,\n        students: state.Users.StudentList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProfileCard));\n"]},"metadata":{},"sourceType":"module"}