{"ast":null,"code":"var _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/Accounts.js\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Accounts.scss\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ProfileCard from \"./ProfileCard\";\nimport Grow from \"@material-ui/core/Grow\";\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      usersList: [],\n      viewToggle: true // true = list, false = card view\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    let prevState = JSON.parse(sessionStorage.getItem('AccountsState'));\n\n    if (prevState) {\n      this.setState(prevState);\n    } else {\n      this.setState(() => {\n        let usersList = {};\n        Object.assign(usersList, this.props.parents);\n        Object.assign(usersList, this.props.students);\n        Object.assign(usersList, this.props.instructors);\n        return {\n          usersList: usersList\n        };\n      });\n    }\n  }\n\n  goToRoute(route) {\n    this.props.history.push(this.props.match.url + route);\n  }\n\n  handleChange(e, newTabIndex) {\n    e.preventDefault();\n    let newUsersList = [];\n    let usersList = {};\n    Object.assign(usersList, this.props.parents);\n    Object.assign(usersList, this.props.students);\n    Object.assign(usersList, this.props.instructors);\n\n    switch (newTabIndex) {\n      case 0:\n        newUsersList = usersList;\n        break;\n\n      case 1:\n        newUsersList = this.props.instructors;\n        break;\n\n      case 2:\n        newUsersList = this.props.students;\n        break;\n      // case 3:\n      //     newUsersList = this.props.parents;\n      //     break;\n\n      default:\n        newUsersList = usersList;\n    }\n\n    this.setState({\n      value: newTabIndex,\n      usersList: newUsersList\n    }, () => {\n      sessionStorage.setItem('AccountsState', JSON.stringify(this.state));\n    });\n  }\n\n  stringToColor(string) {\n    let hash = 0;\n    let i;\n    /* eslint-disable no-bitwise */\n\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let colour = \"#\";\n\n    for (i = 0; i < 3; i += 1) {\n      const value = hash >> i * 8 & 0xff;\n      colour += \"00\".concat(value.toString(16)).substr(-2);\n    }\n    /* eslint-enable no-bitwise */\n\n\n    return colour;\n  }\n\n  render() {\n    let styles = username => ({\n      backgroundColor: this.stringToColor(username),\n      color: \"white\",\n      margin: 9,\n      width: 38,\n      height: 38,\n      fontSize: 14\n    });\n\n    let tableView = () => React.createElement(Table, {\n      className: \"AccountsTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Email\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Role\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, Object.values(this.state.usersList).map(row => React.createElement(TableRow, {\n      key: row.user_id,\n      onClick: event => {\n        event.preventDefault();\n        this.goToRoute(\"/\".concat(row.role, \"/\").concat(row.user_id));\n      },\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      layout: \"row\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      style: styles(row.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, row.name.match(/\\b(\\w)/g).join(\"\"))), React.createElement(Grid, {\n      item: true,\n      md: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, row.name)))), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, row.email), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, row.phone_number), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, row.role.charAt(0).toUpperCase() + row.role.slice(1))))));\n\n    const cardView = () => {\n      return React.createElement(Grow, {\n        in: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, Object.values(this.state.usersList).map(user => React.createElement(ProfileCard, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))));\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"Accounts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h2\",\n      align: \"left\",\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Accounts\"), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: this.state.value,\n      onChange: this.handleChange,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"ALL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"INSTRUCTORS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"STUDENTS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"ADMIN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      className: \"toggleView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(ListView, {\n      className: 'list icon',\n      onClick: event => {\n        event.preventDefault();\n        this.setState({\n          viewToggle: true\n        }, () => {\n          sessionStorage.setItem('AccountsState', JSON.stringify(this.state));\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(CardView, {\n      className: 'card icon',\n      onClick: event => {\n        event.preventDefault();\n        this.setState({\n          viewToggle: false\n        }, () => {\n          sessionStorage.setItem('AccountsState', JSON.stringify(this.state));\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      spacing: 8,\n      className: 'accounts-list-wrapper',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.viewToggle ? tableView() : cardView())));\n  }\n\n}\n\nAccounts.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    instructors: state.Users.InstructorList,\n    parents: state.Users.ParentList,\n    students: state.Users.StudentList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Accounts));","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Accounts/Accounts.js"],"names":["connect","React","Component","BackButton","Grid","Card","Paper","Typography","Tabs","Tab","ListView","CardView","TableHead","TableRow","TableCell","Table","TableBody","CardContent","Button","CardActions","withRouter","Avatar","ProfileCard","Grow","Accounts","constructor","props","state","value","usersList","viewToggle","handleChange","bind","componentWillMount","prevState","JSON","parse","sessionStorage","getItem","setState","Object","assign","parents","students","instructors","goToRoute","route","history","push","match","url","e","newTabIndex","preventDefault","newUsersList","setItem","stringify","stringToColor","string","hash","i","length","charCodeAt","colour","toString","substr","render","styles","username","backgroundColor","color","margin","width","height","fontSize","tableView","values","map","row","user_id","event","role","name","join","email","phone_number","charAt","toUpperCase","slice","cardView","user","propTypes","mapStateToProps","Users","InstructorList","ParentList","StudentList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Card, Paper, Typography} from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport {withRouter} from \"react-router-dom\";\n\nimport \"./Accounts.scss\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ProfileCard from \"./ProfileCard\";\nimport Grow from \"@material-ui/core/Grow\";\n\nclass Accounts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            usersList: [],\n            viewToggle: true, // true = list, false = card view\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentWillMount() {\n        let prevState = JSON.parse(sessionStorage.getItem('AccountsState'));\n        if(prevState){\n            this.setState(prevState);\n\n        } else {\n            this.setState(() => {\n                let usersList = {};\n                Object.assign(usersList, this.props.parents);\n                Object.assign(usersList, this.props.students);\n                Object.assign(usersList, this.props.instructors);\n                return {usersList: usersList,}\n            });\n        }\n    }\n\n    goToRoute(route) {\n        this.props.history.push(this.props.match.url + route);\n    }\n\n    handleChange(e, newTabIndex) {\n        e.preventDefault();\n        let newUsersList = [];\n        let usersList = {};\n        Object.assign(usersList, this.props.parents);\n        Object.assign(usersList, this.props.students);\n        Object.assign(usersList, this.props.instructors);\n        switch (newTabIndex) {\n            case 0:\n                newUsersList = usersList;\n                break;\n            case 1:\n                newUsersList = this.props.instructors;\n                break;\n            case 2:\n                newUsersList = this.props.students;\n                break;\n            // case 3:\n            //     newUsersList = this.props.parents;\n            //     break;\n            default:\n                newUsersList = usersList;\n        }\n        this.setState({value: newTabIndex, usersList: newUsersList},\n            ()=>{\n                sessionStorage.setItem('AccountsState', JSON.stringify(this.state));\n            });\n    }\n\n    stringToColor(string) {\n        let hash = 0;\n        let i;\n\n        /* eslint-disable no-bitwise */\n        for (i = 0; i < string.length; i += 1) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        let colour = \"#\";\n\n        for (i = 0; i < 3; i += 1) {\n            const value = (hash >> (i * 8)) & 0xff;\n            colour += `00${value.toString(16)}`.substr(-2);\n        }\n        /* eslint-enable no-bitwise */\n\n        return colour;\n    }\n\n    render() {\n        let styles = (username) => ({\n                backgroundColor: this.stringToColor(username),\n                color: \"white\",\n                margin: 9,\n                width: 38,\n                height: 38,\n                fontSize: 14,\n            });\n        let tableView = () => (\n            <Table className=\"AccountsTable\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Email</TableCell>\n                        <TableCell>Phone</TableCell>\n                        <TableCell>Role</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {Object.values(this.state.usersList).map((row) => (\n                        <TableRow key={row.user_id}\n                            onClick={(event) => {\n                                event.preventDefault();\n                                this.goToRoute(`/${row.role}/${row.user_id}`);\n                            }}\n                            className=\"row\">\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Grid container layout={\"row\"} alignItems={\"center\"}>\n                                    <Grid item md={3}>\n                                        <Avatar\n                                            style={styles(row.name)}>{row.name.match(/\\b(\\w)/g).join(\"\")}</Avatar>\n                                    </Grid>\n                                    <Grid item md={9}>\n                                        <Typography>\n                                            {row.name}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </TableCell>\n                            <TableCell>{row.email}</TableCell>\n                            <TableCell>{row.phone_number}</TableCell>\n                            <TableCell>{row.role.charAt(0).toUpperCase() + row.role.slice(1)}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        );\n\n        const cardView = () => {\n            return <Grow in={true}>\n                    <div>\n                    {Object.values(this.state.usersList).map((user) => (\n                    <ProfileCard user={user}/>))}\n                    </div>\n                </Grow>\n        };\n\n        return (<Grid item xs={12} className=\"Accounts\">\n            <Paper className={\"paper\"}>\n                <Typography variant=\"h2\" align={\"left\"} className={\"heading\"}>Accounts</Typography>\n                <Grid container direction={\"row\"} alignItems={\"center\"}>\n                    <Grid item xs={9}>\n                        <Tabs\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            className={\"tabs\"}\n                        >\n                            <Tab label=\"ALL\"/>\n                            <Tab label=\"INSTRUCTORS\"/>\n                            <Tab label=\"STUDENTS\"/>\n                            {/*<Tab label=\"PARENTS\"/>*/}\n                            <Tab label=\"ADMIN\"/>\n                        </Tabs>\n                    </Grid>\n                    <Grid item xs={2} className=\"toggleView\">\n                        <ListView className={'list icon'} onClick={(event) => {\n                            event.preventDefault();\n                            this.setState({viewToggle: true},\n                                ()=>{sessionStorage.setItem('AccountsState',JSON.stringify(this.state));});\n                        }}/>\n                        <CardView className={'card icon'} onClick={(event) => {\n                            event.preventDefault();\n                            this.setState({viewToggle: false},\n                                ()=>{sessionStorage.setItem('AccountsState',JSON.stringify(this.state));});\n                        }}/>\n                    </Grid>\n                </Grid>\n                <Grid container\n                      direction={\"row\"}\n                      alignItems={\"center\"}\n                      spacing={8}\n                      className={'accounts-list-wrapper'}\n                >\n                    {\n                        this.state.viewToggle ?\n                            tableView() :\n                            cardView()\n                    }\n                </Grid>\n            </Paper>\n        </Grid>)\n    }\n}\n\nAccounts.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        instructors: state.Users.InstructorList,\n        parents: state.Users.ParentList,\n        students: state.Users.StudentList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Accounts));\n"]},"metadata":{},"sourceType":"module"}