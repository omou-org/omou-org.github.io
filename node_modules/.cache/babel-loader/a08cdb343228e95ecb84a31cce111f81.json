{"ast":null,"code":"import _objectSpread from \"/Users/danielhuang/Desktop/front-end/omou-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/RegistrationCourse.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport BackButton from \"../../BackButton.js\";\nimport RegistrationActions from \"./RegistrationActions\";\nimport '../../../theme/theme.scss'; //Material UI Imports\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClassIcon from \"@material-ui/icons/Class\";\nimport { Divider, LinearProgress, TableBody, Typography } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CallIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\nimport Button from \"@material-ui/core/Button\";\nimport { NavLink } from \"react-router-dom\";\nconst rowHeadings = [{\n  id: 'Student',\n  numberic: false,\n  disablePadding: false\n}, {\n  id: 'Parent',\n  numberic: false,\n  disablePadding: false\n}, {\n  id: 'Status',\n  numberic: false,\n  disablePadding: false\n}, {\n  id: '',\n  numberic: false,\n  disablePadding: false\n}];\n\nlet TableToolbar = props => {\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, rowHeadings.map((row, i) => React.createElement(TableCell, {\n    key: i,\n    align: row.numberic ? 'right' : 'left',\n    padding: row.disablePadding ? 'none' : 'default',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, row.id))));\n};\n\nclass RegistrationCourse extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillMount() {\n    let CourseInView = this.props.courses[this.props.computedMatch.params.courseID];\n    this.setState(_objectSpread({}, CourseInView));\n  }\n\n  stringToColor(string) {\n    let hash = 0;\n    let i;\n    /* eslint-disable no-bitwise */\n\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let colour = '#';\n\n    for (i = 0; i < 3; i += 1) {\n      const value = hash >> i * 8 & 0xff;\n      colour += \"00\".concat(value.toString(16)).substr(-2);\n    }\n    /* eslint-enable no-bitwise */\n\n\n    return colour;\n  }\n\n  render() {\n    let DayConverter = {\n      1: \"Monday\",\n      2: \"Tuesday\",\n      3: \"Wednesday\",\n      4: \"Thursday\",\n      5: \"Friday\",\n      6: \"Saturday\"\n    };\n    let Days = this.state.schedule.days;\n    Days = Days.map(day => {\n      return DayConverter[day];\n    });\n    let timeOptions = {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n    let dateOptions = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    let startDate = new Date(this.state.schedule.start_date + this.state.schedule.start_time),\n        endDate = new Date(this.state.schedule.end_date + this.state.schedule.end_time),\n        startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n        endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions);\n    startDate = startDate.toLocaleDateString(\"en-US\", dateOptions);\n    endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n    let instructor = this.props.instructors[this.state.instructor_id];\n    let rows = [];\n    let student, row, parent, Actions;\n    this.state.roster.forEach(student_id => {\n      student = this.props.students[student_id];\n      parent = this.props.parents[student.parent_id];\n\n      Actions = () => {\n        return React.createElement(\"div\", {\n          className: student.name + ' actions',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"mailto:\" + parent.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(EmailIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        })));\n      };\n\n      row = [student.name, parent.name, \"Paid\", React.createElement(Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })];\n      rows.push(row);\n    });\n\n    let styles = username => {\n      return {\n        backgroundColor: this.stringToColor(username),\n        color: \"white\",\n        width: 38,\n        height: 38,\n        fontSize: 14,\n        border: '1px solid white'\n      };\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(RegistrationActions, {\n      courseTitle: this.state.course_title //admin = false;\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(Paper, {\n      className: \"paper content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(BackButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"button\",\n      style: {\n        padding: \"6px 10px 6px 10px\",\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      style: {\n        fontSize: \"16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), \"Edit Course\"))), React.createElement(Divider, {\n      className: \"top-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"course-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      variant: 'h3',\n      style: {\n        fontWeight: \"500\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(CalendarIcon, {\n      style: {\n        fontSize: \"16\"\n      },\n      align: 'left',\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: 'left',\n      style: {\n        marginLeft: '5px',\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, startDate, \" - \", endDate)), React.createElement(\"div\", {\n      className: \"info-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"first-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(ClassIcon, {\n      style: {\n        fontSize: \"16\"\n      },\n      className: 'icon',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: 'left',\n      className: 'text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Course Information\")), React.createElement(\"div\", {\n      className: 'second-line',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      avatar: React.createElement(Avatar, {\n        style: styles(instructor.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, instructor.name.match(/\\b(\\w)/g).join('')),\n      label: instructor.name,\n      className: \"chip\",\n      component: NavLink,\n      to: \"/accounts/\".concat(instructor.role, \"/\").concat(instructor.user_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: 'left',\n      className: 'text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, startTime, \" - \", endTime), React.createElement(Typography, {\n      align: 'left',\n      className: 'text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, Days), React.createElement(Typography, {\n      align: 'left',\n      className: 'text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, this.state.grade, \" Grade\")))), React.createElement(Typography, {\n      align: 'left',\n      className: 'description text',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.description), React.createElement(\"div\", {\n      className: \"course-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.roster.length, \" / \", this.state.capacity, \" Spaces Taken\")), React.createElement(LinearProgress, {\n      color: 'primary',\n      value: this.state.roster.length / this.state.capacity * 100,\n      valueBuffer: 100,\n      variant: 'buffer',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(TableToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, rows.map((row, i) => {\n      return React.createElement(TableRow, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, row.map((data, j) => {\n        return React.createElement(TableCell, {\n          key: j,\n          className: \"\".concat(j % 4 === 0 ? 'bold' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, data);\n      }));\n    })))));\n  }\n\n}\n\nRegistrationCourse.propTypes = {\n  stuffActions: PropTypes.object,\n  RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    courses: state.Course[\"NewCourseList\"],\n    courseCategories: state.Course[\"CourseCategories\"],\n    students: state.Users[\"StudentList\"],\n    instructors: state.Users[\"InstructorList\"],\n    parents: state.Users[\"ParentList\"],\n    courseRoster: state.Course[\"CourseRoster\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registrationActions: bindActionCreators(registrationActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationCourse);","map":{"version":3,"sources":["/Users/danielhuang/Desktop/front-end/omou-frontend/src/components/FeatureViews/Registration/RegistrationCourse.js"],"names":["connect","bindActionCreators","registrationActions","PropTypes","React","Component","BackButton","RegistrationActions","Grid","Paper","ClassIcon","Divider","LinearProgress","TableBody","Typography","Avatar","Chip","Table","TableHead","TableRow","TableCell","CallIcon","EmailIcon","EditIcon","CalendarIcon","Button","NavLink","rowHeadings","id","numberic","disablePadding","TableToolbar","props","map","row","i","RegistrationCourse","constructor","state","componentWillMount","CourseInView","courses","computedMatch","params","courseID","setState","stringToColor","string","hash","length","charCodeAt","colour","value","toString","substr","render","DayConverter","Days","schedule","days","day","timeOptions","hour","minute","dateOptions","year","month","startDate","Date","start_date","start_time","endDate","end_date","end_time","startTime","toLocaleTimeString","endTime","toLocaleDateString","instructor","instructors","instructor_id","rows","student","parent","Actions","roster","forEach","student_id","students","parents","parent_id","name","email","push","styles","username","backgroundColor","color","width","height","fontSize","border","course_title","padding","fontWeight","title","marginLeft","marginTop","match","join","role","user_id","grade","description","capacity","data","j","propTypes","stuffActions","object","RegistrationForms","array","mapStateToProps","Course","courseCategories","Users","courseRoster","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport BackButton from \"../../BackButton.js\";\nimport RegistrationActions from \"./RegistrationActions\";\nimport '../../../theme/theme.scss';\n\n//Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClassIcon from \"@material-ui/icons/Class\"\nimport { Divider, LinearProgress, TableBody, Typography } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CallIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\nimport Button from \"@material-ui/core/Button\";\nimport {NavLink} from \"react-router-dom\";\n\nconst rowHeadings = [\n    { id: 'Student', numberic: false, disablePadding: false },\n    { id: 'Parent', numberic: false, disablePadding: false },\n    { id: 'Status', numberic: false, disablePadding: false },\n    { id: '', numberic: false, disablePadding: false },\n];\n\nlet TableToolbar = props => {\n    return (<TableHead>\n        <TableRow>\n            {rowHeadings.map(\n                (row, i) => (\n                    <TableCell\n                        key={i}\n                        align={row.numberic ? 'right' : 'left'}\n                        padding={row.disablePadding ? 'none' : 'default'}\n                    >\n                        {row.id}\n                    </TableCell>\n                )\n            )}\n        </TableRow>\n    </TableHead>);\n};\n\nclass RegistrationCourse extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentWillMount() {\n        let CourseInView = this.props.courses[this.props.computedMatch.params.courseID] ;\n        this.setState({ ...CourseInView });\n    }\n\n    stringToColor(string) {\n        let hash = 0;\n        let i;\n\n        /* eslint-disable no-bitwise */\n        for (i = 0; i < string.length; i += 1) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        let colour = '#';\n\n        for (i = 0; i < 3; i += 1) {\n            const value = (hash >> (i * 8)) & 0xff;\n            colour += `00${value.toString(16)}`.substr(-2);\n        }\n        /* eslint-enable no-bitwise */\n\n        return colour;\n    }\n\n    render() {\n        let DayConverter = {\n            1: \"Monday\",\n            2: \"Tuesday\",\n            3: \"Wednesday\",\n            4: \"Thursday\",\n            5: \"Friday\",\n            6: \"Saturday\",\n        };\n        let Days = this.state.schedule.days;\n        Days = Days.map((day) => {\n            return DayConverter[day];\n        });\n\n        let timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\n        let dateOptions = { year: \"numeric\", month: \"short\", day: \"numeric\"};\n        let startDate = new Date(this.state.schedule.start_date + this.state.schedule.start_time),\n            endDate = new Date(this.state.schedule.end_date + this.state.schedule.end_time),\n            startTime = startDate.toLocaleTimeString(\"en-US\",timeOptions),\n            endTime = endDate.toLocaleTimeString(\"en-US\",timeOptions);\n        startDate = startDate.toLocaleDateString(\"en-US\",dateOptions);\n        endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n\n        let instructor = this.props.instructors[this.state.instructor_id];\n\n        let rows = [];\n        let student, row, parent, Actions;\n\n        this.state.roster.forEach((student_id) => {\n            student = this.props.students[student_id];\n            parent = this.props.parents[student.parent_id];\n            Actions = () => {\n                return <div className={student.name + ' actions'}>\n                    <a href={\"mailto:\" + parent.email}>\n                        <EmailIcon />\n                    </a>\n                </div>\n            };\n            row = [student.name, parent.name, \"Paid\", <Actions />];\n            rows.push(row);\n        });\n\n        let styles = (username) => {\n            return {\n                backgroundColor: this.stringToColor(username),\n                color: \"white\",\n                width: 38,\n                height: 38,\n                fontSize: 14,\n                border:'1px solid white'\n            }\n        };\n\n        return (\n            <Grid item xs={12}>\n                <Paper className={\"paper\"}>\n                    <Grid item lg={12}>\n                        <RegistrationActions\n                            courseTitle={this.state.course_title}\n                        //admin = false;\n                        />\n                    </Grid>\n                </Paper>\n                <Paper className={\"paper content\"}>\n                    <Grid container justify={\"space-between\"}>\n                        <Grid item sm={3}>\n                            <BackButton />\n                        </Grid>\n                        <Grid item sm={2}>\n                            <Button className={\"button\"} style={{padding:\"6px 10px 6px 10px\", backgroundColor:\"white\"}}>\n                                <EditIcon style={{fontSize:\"16px\"}}/>\n                                Edit Course\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Divider className={\"top-divider\"}/>\n                    <div className={\"course-heading\"}>\n                        <Typography align={'left'} variant={'h3'} style={{ fontWeight: \"500\" }} >\n                            {this.state.title}\n                        </Typography>\n                        <div className={\"date\"}>\n                            <CalendarIcon style={{ fontSize: \"16\" }} align={'left'} className={\"icon\"}/>\n                            <Typography align={'left'} style={{ marginLeft: '5px', marginTop: '10px' }}>\n                                {startDate} - {endDate}\n                            </Typography>\n                        </div>\n                        <div className={\"info-section\"}>\n                            <div className={\"first-line\"}>\n                                <ClassIcon style={{ fontSize: \"16\" }} className={'icon'} />\n                                <Typography align={'left'} className={'text'}>\n                                    Course Information\n                                </Typography>\n                            </div>\n                            <div className={'second-line'}>\n                                <Chip\n                                    avatar={<Avatar style={styles(instructor.name)}>{instructor.name.match(/\\b(\\w)/g).join('')}</Avatar>}\n                                    label={instructor.name}\n                                    className={\"chip\"}\n                                    component={NavLink}\n                                    to={`/accounts/${instructor.role}/${instructor.user_id}`}\n                                />\n                                <Typography align={'left'} className={'text'}>\n                                    {startTime} - {endTime}\n                                </Typography>\n                                <Typography align={'left'} className={'text'}>\n                                    {Days}\n                                </Typography>\n                                <Typography align={'left'} className={'text'}>\n                                    {this.state.grade} Grade\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Typography align={'left'} className={'description text'}>\n                        {this.state.description}\n                    </Typography>\n                    <div className={\"course-status\"}>\n                        <div className={\"status\"}>\n                            <div className={\"text\"}>\n                                {this.state.roster.length} / {this.state.capacity} Spaces Taken\n                            </div>\n                        </div>\n                        <LinearProgress\n                            color={'primary'}\n                            value={(this.state.roster.length / this.state.capacity) * 100}\n                            valueBuffer={100}\n                            variant={'buffer'}\n                        />\n                    </div>\n                    <Table>\n                        <TableToolbar />\n                        <TableBody>\n                            {\n                                rows.map((row, i) => {\n                                    return <TableRow key={i}>\n                                        {row.map((data, j) => {\n                                            return <TableCell key={j} className={`${j % 4 === 0 ? 'bold' : ''}`}>\n                                                {data}\n                                            </TableCell>\n                                        })}\n                                    </TableRow>\n                                })\n                            }\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n        )\n    }\n}\n\nRegistrationCourse.propTypes = {\n    stuffActions: PropTypes.object,\n    RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course[\"NewCourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n        students: state.Users[\"StudentList\"],\n        instructors: state.Users[\"InstructorList\"],\n        parents: state.Users[\"ParentList\"],\n        courseRoster: state.Course[\"CourseRoster\"],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        registrationActions: bindActionCreators(registrationActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegistrationCourse);"]},"metadata":{},"sourceType":"module"}